// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>

namespace sym {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     x0: Scalar
 *     x1: Scalar
 *
 * Outputs:
 *     result: Matrix20_15
 *
 */
template <typename Scalar>
Eigen::Matrix<Scalar, 20, 15> N3C4B2ComputeBDense(const Scalar x0, const Scalar x1) {
  // Total ops: 39

  // Input arrays

  // Intermediate terms (9)
  const Scalar _tmp0 = x1 + 2;
  const Scalar _tmp1 = 2 * x0;
  const Scalar _tmp2 = -_tmp1;
  const Scalar _tmp3 = (Scalar(1) / Scalar(2)) * x0;
  const Scalar _tmp4 = x1 + 1;
  const Scalar _tmp5 = x0 + 2;
  const Scalar _tmp6 = -_tmp5;
  const Scalar _tmp7 = Scalar(1.0) / (x0);
  const Scalar _tmp8 = x1 - 1;

  // Output terms (1)
  Eigen::Matrix<Scalar, 20, 15> _result;

  _result(0, 0) = 0;
  _result(0, 1) = 0;
  _result(0, 2) = 0;
  _result(0, 3) = 0;
  _result(0, 4) = 0;
  _result(0, 5) = 0;
  _result(0, 6) = 0;
  _result(0, 7) = 0;
  _result(0, 8) = 0;
  _result(0, 9) = x0;
  _result(0, 10) = 0;
  _result(0, 11) = 0;
  _result(0, 12) = 0;
  _result(0, 13) = -_tmp0;
  _result(0, 14) = -_tmp1 - x1;
  _result(1, 0) = 0;
  _result(1, 1) = 0;
  _result(1, 2) = 0;
  _result(1, 3) = 0;
  _result(1, 4) = 0;
  _result(1, 5) = 0;
  _result(1, 6) = 0;
  _result(1, 7) = 0;
  _result(1, 8) = x0;
  _result(1, 9) = 0;
  _result(1, 10) = 0;
  _result(1, 11) = 0;
  _result(1, 12) = _tmp2;
  _result(1, 13) = 0;
  _result(1, 14) = -4;
  _result(2, 0) = 0;
  _result(2, 1) = 0;
  _result(2, 2) = 0;
  _result(2, 3) = 0;
  _result(2, 4) = 0;
  _result(2, 5) = 0;
  _result(2, 6) = 0;
  _result(2, 7) = Scalar(2.0);
  _result(2, 8) = 0;
  _result(2, 9) = 0;
  _result(2, 10) = 0;
  _result(2, 11) = -2;
  _result(2, 12) = 0;
  _result(2, 13) = 0;
  _result(2, 14) = 0;
  _result(3, 0) = 0;
  _result(3, 1) = 0;
  _result(3, 2) = 0;
  _result(3, 3) = 0;
  _result(3, 4) = 0;
  _result(3, 5) = 0;
  _result(3, 6) = x1;
  _result(3, 7) = 0;
  _result(3, 8) = 0;
  _result(3, 9) = 0;
  _result(3, 10) = _tmp3;
  _result(3, 11) = 0;
  _result(3, 12) = 0;
  _result(3, 13) = 0;
  _result(3, 14) = 1;
  _result(4, 0) = 0;
  _result(4, 1) = 0;
  _result(4, 2) = 0;
  _result(4, 3) = 0;
  _result(4, 4) = 0;
  _result(4, 5) = -2;
  _result(4, 6) = 0;
  _result(4, 7) = 0;
  _result(4, 8) = 0;
  _result(4, 9) = 0;
  _result(4, 10) = 0;
  _result(4, 11) = 0;
  _result(4, 12) = -4 * x1;
  _result(4, 13) = _tmp4;
  _result(4, 14) = 0;
  _result(5, 0) = 0;
  _result(5, 1) = 0;
  _result(5, 2) = 0;
  _result(5, 3) = 0;
  _result(5, 4) = 1;
  _result(5, 5) = 0;
  _result(5, 6) = 0;
  _result(5, 7) = 0;
  _result(5, 8) = 0;
  _result(5, 9) = 0;
  _result(5, 10) = 0;
  _result(5, 11) = _tmp0;
  _result(5, 12) = 0;
  _result(5, 13) = 2 * x1;
  _result(5, 14) = 0;
  _result(6, 0) = 0;
  _result(6, 1) = 0;
  _result(6, 2) = 0;
  _result(6, 3) = _tmp6;
  _result(6, 4) = 0;
  _result(6, 5) = 0;
  _result(6, 6) = 0;
  _result(6, 7) = 0;
  _result(6, 8) = 0;
  _result(6, 9) = 0;
  _result(6, 10) = 2;
  _result(6, 11) = 0;
  _result(6, 12) = 0;
  _result(6, 13) = 2;
  _result(6, 14) = 0;
  _result(7, 0) = 0;
  _result(7, 1) = 0;
  _result(7, 2) = 2;
  _result(7, 3) = 0;
  _result(7, 4) = 0;
  _result(7, 5) = 0;
  _result(7, 6) = 0;
  _result(7, 7) = 0;
  _result(7, 8) = 0;
  _result(7, 9) = 0;
  _result(7, 10) = 0;
  _result(7, 11) = -_tmp7;
  _result(7, 12) = -2;
  _result(7, 13) = 0;
  _result(7, 14) = 0;
  _result(8, 0) = 0;
  _result(8, 1) = -1;
  _result(8, 2) = 0;
  _result(8, 3) = 0;
  _result(8, 4) = 0;
  _result(8, 5) = 0;
  _result(8, 6) = 0;
  _result(8, 7) = 0;
  _result(8, 8) = 0;
  _result(8, 9) = 0;
  _result(8, 10) = x1;
  _result(8, 11) = 0;
  _result(8, 12) = _tmp8;
  _result(8, 13) = 0;
  _result(8, 14) = 0;
  _result(9, 0) = _tmp2;
  _result(9, 1) = 0;
  _result(9, 2) = 0;
  _result(9, 3) = 0;
  _result(9, 4) = 0;
  _result(9, 5) = 0;
  _result(9, 6) = 0;
  _result(9, 7) = 0;
  _result(9, 8) = 0;
  _result(9, 9) = 0;
  _result(9, 10) = -_tmp8;
  _result(9, 11) = 8;
  _result(9, 12) = 0;
  _result(9, 13) = 0;
  _result(9, 14) = 0;
  _result(10, 0) = 0;
  _result(10, 1) = 0;
  _result(10, 2) = 0;
  _result(10, 3) = 0;
  _result(10, 4) = 0;
  _result(10, 5) = -1;
  _result(10, 6) = 0;
  _result(10, 7) = 0;
  _result(10, 8) = _tmp3 + Scalar(1) / Scalar(2);
  _result(10, 9) = 2 - x0;
  _result(10, 10) = 0;
  _result(10, 11) = 0;
  _result(10, 12) = 0;
  _result(10, 13) = 0;
  _result(10, 14) = 0;
  _result(11, 0) = 0;
  _result(11, 1) = 0;
  _result(11, 2) = 0;
  _result(11, 3) = 0;
  _result(11, 4) = _tmp4 + x0;
  _result(11, 5) = 0;
  _result(11, 6) = 0;
  _result(11, 7) = x0;
  _result(11, 8) = 0;
  _result(11, 9) = _tmp1;
  _result(11, 10) = 0;
  _result(11, 11) = 0;
  _result(11, 12) = 0;
  _result(11, 13) = 0;
  _result(11, 14) = 0;
  _result(12, 0) = 0;
  _result(12, 1) = 0;
  _result(12, 2) = 0;
  _result(12, 3) = 3 * x1;
  _result(12, 4) = 0;
  _result(12, 5) = 0;
  _result(12, 6) = 0;
  _result(12, 7) = 0;
  _result(12, 8) = 0;
  _result(12, 9) = _tmp6;
  _result(12, 10) = 0;
  _result(12, 11) = 0;
  _result(12, 12) = 0;
  _result(12, 13) = 0;
  _result(12, 14) = 0;
  _result(13, 0) = 0;
  _result(13, 1) = 0;
  _result(13, 2) = x0 - 1;
  _result(13, 3) = 0;
  _result(13, 4) = 0;
  _result(13, 5) = 0;
  _result(13, 6) = 0;
  _result(13, 7) = -4;
  _result(13, 8) = -1;
  _result(13, 9) = 0;
  _result(13, 10) = 0;
  _result(13, 11) = 0;
  _result(13, 12) = 0;
  _result(13, 13) = 0;
  _result(13, 14) = 0;
  _result(14, 0) = 0;
  _result(14, 1) = _tmp1;
  _result(14, 2) = 0;
  _result(14, 3) = 0;
  _result(14, 4) = 0;
  _result(14, 5) = 0;
  _result(14, 6) = x1;
  _result(14, 7) = 0;
  _result(14, 8) = 4;
  _result(14, 9) = 0;
  _result(14, 10) = 0;
  _result(14, 11) = 0;
  _result(14, 12) = 0;
  _result(14, 13) = 0;
  _result(14, 14) = 0;
  _result(15, 0) = 0;
  _result(15, 1) = 0;
  _result(15, 2) = 0;
  _result(15, 3) = 0;
  _result(15, 4) = 0;
  _result(15, 5) = 0;
  _result(15, 6) = x0 - x1;
  _result(15, 7) = _tmp1 + 2;
  _result(15, 8) = 0;
  _result(15, 9) = 0;
  _result(15, 10) = 0;
  _result(15, 11) = 0;
  _result(15, 12) = 0;
  _result(15, 13) = 0;
  _result(15, 14) = 0;
  _result(16, 0) = 0;
  _result(16, 1) = 0;
  _result(16, 2) = _tmp5;
  _result(16, 3) = 0;
  _result(16, 4) = -4;
  _result(16, 5) = 2;
  _result(16, 6) = 0;
  _result(16, 7) = 0;
  _result(16, 8) = 0;
  _result(16, 9) = 0;
  _result(16, 10) = 0;
  _result(16, 11) = 0;
  _result(16, 12) = 0;
  _result(16, 13) = 0;
  _result(16, 14) = 0;
  _result(17, 0) = 0;
  _result(17, 1) = _tmp1;
  _result(17, 2) = 0;
  _result(17, 3) = 2;
  _result(17, 4) = 0;
  _result(17, 5) = -_tmp7 * x1;
  _result(17, 6) = 0;
  _result(17, 7) = 0;
  _result(17, 8) = 0;
  _result(17, 9) = 0;
  _result(17, 10) = 0;
  _result(17, 11) = 0;
  _result(17, 12) = 0;
  _result(17, 13) = 0;
  _result(17, 14) = 0;
  _result(18, 0) = _tmp2;
  _result(18, 1) = 0;
  _result(18, 2) = 0;
  _result(18, 3) = _tmp2;
  _result(18, 4) = 0;
  _result(18, 5) = 0;
  _result(18, 6) = 0;
  _result(18, 7) = 0;
  _result(18, 8) = 0;
  _result(18, 9) = 0;
  _result(18, 10) = 0;
  _result(18, 11) = 0;
  _result(18, 12) = 0;
  _result(18, 13) = 0;
  _result(18, 14) = 0;
  _result(19, 0) = 1;
  _result(19, 1) = -1 / (x1 - 2);
  _result(19, 2) = 2;
  _result(19, 3) = 0;
  _result(19, 4) = 0;
  _result(19, 5) = 0;
  _result(19, 6) = 0;
  _result(19, 7) = 0;
  _result(19, 8) = 0;
  _result(19, 9) = 0;
  _result(19, 10) = 0;
  _result(19, 11) = 0;
  _result(19, 12) = 0;
  _result(19, 13) = 0;
  _result(19, 14) = 0;

  return _result;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
