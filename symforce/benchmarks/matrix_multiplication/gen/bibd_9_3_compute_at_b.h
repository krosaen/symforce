// -----------------------------------------------------------------------------
// This file was autogenerated by symforce from template:
//     cpp_templates/function/FUNCTION.h.jinja
// Do NOT modify by hand.
// -----------------------------------------------------------------------------

#pragma once

#include <Eigen/Dense>
#include <Eigen/Sparse>

namespace sym {

/**
 * This function was autogenerated. Do not modify by hand.
 *
 * Args:
 *     x0: Scalar
 *     x1: Scalar
 *
 * Outputs:
 *     result: Matrix84_84
 *
 */
template <typename Scalar>
__attribute__((noinline)) Eigen::SparseMatrix<Scalar> Bibd93ComputeAtB(const Scalar x0,
                                                                       const Scalar x1) {
  // Total ops: 957

  // Input arrays

  // Intermediate terms (306)
  const Scalar _tmp0 = Scalar(1.0) / (x0);
  const Scalar _tmp1 = 2 * _tmp0;
  const Scalar _tmp2 = 2 * x0;
  const Scalar _tmp3 = _tmp2 + 1;
  const Scalar _tmp4 = 4 * _tmp0;
  const Scalar _tmp5 = x1 + 2;
  const Scalar _tmp6 = -_tmp0;
  const Scalar _tmp7 = 2 * x1;
  const Scalar _tmp8 = -3 * _tmp0;
  const Scalar _tmp9 = _tmp2 - 4;
  const Scalar _tmp10 = _tmp7 - 6;
  const Scalar _tmp11 = _tmp2 - 2;
  const Scalar _tmp12 = -_tmp11;
  const Scalar _tmp13 = 4 * x0;
  const Scalar _tmp14 = -_tmp13;
  const Scalar _tmp15 = _tmp7 - 4;
  const Scalar _tmp16 = 8 - _tmp7;
  const Scalar _tmp17 = -_tmp2;
  const Scalar _tmp18 = _tmp7 + 4;
  const Scalar _tmp19 = -_tmp18;
  const Scalar _tmp20 = 12 * x0;
  const Scalar _tmp21 = 6 * x0;
  const Scalar _tmp22 = x0 * x1;
  const Scalar _tmp23 = _tmp5 * _tmp7;
  const Scalar _tmp24 = 3 * x1;
  const Scalar _tmp25 = _tmp24 + 6;
  const Scalar _tmp26 = _tmp2 * _tmp5;
  const Scalar _tmp27 = _tmp5 * x1;
  const Scalar _tmp28 = _tmp5 * x0;
  const Scalar _tmp29 = -_tmp28;
  const Scalar _tmp30 = std::pow(x1, Scalar(2));
  const Scalar _tmp31 = _tmp30 * x0;
  const Scalar _tmp32 = -_tmp31;
  const Scalar _tmp33 = _tmp2 * x1;
  const Scalar _tmp34 = -x1;
  const Scalar _tmp35 = -_tmp5;
  const Scalar _tmp36 = Scalar(4.0) * x1;
  const Scalar _tmp37 = Scalar(2.0) * x1;
  const Scalar _tmp38 = Scalar(4.0) * x0;
  const Scalar _tmp39 = -_tmp38;
  const Scalar _tmp40 = 4 * x1;
  const Scalar _tmp41 = -_tmp40;
  const Scalar _tmp42 = 8 * x0;
  const Scalar _tmp43 = -_tmp42;
  const Scalar _tmp44 = _tmp13 + 8;
  const Scalar _tmp45 = std::pow(x0, Scalar(2));
  const Scalar _tmp46 = _tmp40 * _tmp45;
  const Scalar _tmp47 = _tmp13 * x1;
  const Scalar _tmp48 = (Scalar(1) / Scalar(2)) * x1;
  const Scalar _tmp49 = -_tmp48;
  const Scalar _tmp50 = x0 + x1;
  const Scalar _tmp51 = _tmp30 * _tmp50;
  const Scalar _tmp52 = (Scalar(1) / Scalar(2)) * _tmp51;
  const Scalar _tmp53 = (Scalar(1) / Scalar(2)) * _tmp22;
  const Scalar _tmp54 = Scalar(0.5) * x1;
  const Scalar _tmp55 = _tmp0 * x1;
  const Scalar _tmp56 = x0 + 2;
  const Scalar _tmp57 = _tmp2 + _tmp7;
  const Scalar _tmp58 = x1 - 1;
  const Scalar _tmp59 = _tmp58 * x1;
  const Scalar _tmp60 = x1 + 3;
  const Scalar _tmp61 = x0 + 1;
  const Scalar _tmp62 = _tmp0 * _tmp61;
  const Scalar _tmp63 = -_tmp59;
  const Scalar _tmp64 = _tmp58 * _tmp7;
  const Scalar _tmp65 = _tmp30 * _tmp58;
  const Scalar _tmp66 = x1 + Scalar(-0.5);
  const Scalar _tmp67 = 8 * _tmp22;
  const Scalar _tmp68 = -_tmp67;
  const Scalar _tmp69 = -_tmp23;
  const Scalar _tmp70 = 8 * x1;
  const Scalar _tmp71 = -_tmp33;
  const Scalar _tmp72 = _tmp9 * x1;
  const Scalar _tmp73 = -_tmp47;
  const Scalar _tmp74 = 4 * _tmp30;
  const Scalar _tmp75 = -_tmp74;
  const Scalar _tmp76 = _tmp61 * _tmp7;
  const Scalar _tmp77 = _tmp7 + 2;
  const Scalar _tmp78 = Scalar(2.0) * x0;
  const Scalar _tmp79 = _tmp22 - 2;
  const Scalar _tmp80 = -_tmp9;
  const Scalar _tmp81 = x0 - 1;
  const Scalar _tmp82 = -_tmp70;
  const Scalar _tmp83 = _tmp81 * x1;
  const Scalar _tmp84 = -_tmp83;
  const Scalar _tmp85 = _tmp7 - 2;
  const Scalar _tmp86 = x1 + 1;
  const Scalar _tmp87 = -_tmp24 * _tmp50;
  const Scalar _tmp88 = x0 - 3;
  const Scalar _tmp89 = 2 * _tmp45;
  const Scalar _tmp90 = -_tmp89;
  const Scalar _tmp91 = 6 * x1;
  const Scalar _tmp92 = _tmp34 + x0;
  const Scalar _tmp93 = _tmp56 * _tmp92;
  const Scalar _tmp94 = -_tmp92 * x0;
  const Scalar _tmp95 = _tmp92 * x1;
  const Scalar _tmp96 = -_tmp7;
  const Scalar _tmp97 = _tmp2 + _tmp96;
  const Scalar _tmp98 = _tmp13 + _tmp41;
  const Scalar _tmp99 = -_tmp30;
  const Scalar _tmp100 = -_tmp22;
  const Scalar _tmp101 = Scalar(1.0) * _tmp0;
  const Scalar _tmp102 = x1 - 3;
  const Scalar _tmp103 = Scalar(0.5) * x0;
  const Scalar _tmp104 = -_tmp50;
  const Scalar _tmp105 = -_tmp57;
  const Scalar _tmp106 = _tmp50 * _tmp7;
  const Scalar _tmp107 = _tmp2 * _tmp61;
  const Scalar _tmp108 = -_tmp107;
  const Scalar _tmp109 = -x0;
  const Scalar _tmp110 = -_tmp21;
  const Scalar _tmp111 = _tmp2 + 2;
  const Scalar _tmp112 = 4 * _tmp45;
  const Scalar _tmp113 = -_tmp112;
  const Scalar _tmp114 = -_tmp95;
  const Scalar _tmp115 = -_tmp93;
  const Scalar _tmp116 = -_tmp92;
  const Scalar _tmp117 = _tmp102 * x0;
  const Scalar _tmp118 = _tmp102 * _tmp2;
  const Scalar _tmp119 = -_tmp118;
  const Scalar _tmp120 = _tmp17 + 2;
  const Scalar _tmp121 = Scalar(1.0) * x1;
  const Scalar _tmp122 = _tmp15 * _tmp7;
  const Scalar _tmp123 = _tmp40 - 4;
  const Scalar _tmp124 = 5 * x0;
  const Scalar _tmp125 = _tmp13 - 4;
  const Scalar _tmp126 = x0 - 4;
  const Scalar _tmp127 = -_tmp126 * x0;
  const Scalar _tmp128 = 3 * x0;
  const Scalar _tmp129 = _tmp58 * x0;
  const Scalar _tmp130 = -_tmp129;
  const Scalar _tmp131 = -_tmp86;
  const Scalar _tmp132 = _tmp45 * _tmp7;
  const Scalar _tmp133 = _tmp2 * _tmp56;
  const Scalar _tmp134 = -_tmp133;
  const Scalar _tmp135 = _tmp81 * x0;
  const Scalar _tmp136 = _tmp50 * x1;
  const Scalar _tmp137 = _tmp7 + 1;
  const Scalar _tmp138 = -_tmp58;
  const Scalar _tmp139 = _tmp7 + 6;
  const Scalar _tmp140 = -_tmp81;
  const Scalar _tmp141 = Scalar(1.0) * x0;
  const Scalar _tmp142 = _tmp141 + Scalar(-1.0);
  const Scalar _tmp143 = -_tmp111;
  const Scalar _tmp144 = _tmp2 * _tmp58;
  const Scalar _tmp145 = -_tmp144;
  const Scalar _tmp146 = _tmp2 * _tmp81;
  const Scalar _tmp147 = -_tmp146;
  const Scalar _tmp148 = _tmp61 * x0;
  const Scalar _tmp149 = _tmp50 + 1;
  const Scalar _tmp150 = -_tmp15 * _tmp2;
  const Scalar _tmp151 = x0 - 2;
  const Scalar _tmp152 = _tmp151 * _tmp2;
  const Scalar _tmp153 = _tmp7 * _tmp86;
  const Scalar _tmp154 = _tmp151 * x1;
  const Scalar _tmp155 = -_tmp154;
  const Scalar _tmp156 = _tmp151 * x0;
  const Scalar _tmp157 = x1 + 4;
  const Scalar _tmp158 = _tmp157 * _tmp7;
  const Scalar _tmp159 = _tmp157 * _tmp2;
  const Scalar _tmp160 = -_tmp24;
  const Scalar _tmp161 = _tmp157 * x1;
  const Scalar _tmp162 = _tmp157 * x0;
  const Scalar _tmp163 = -_tmp162;
  const Scalar _tmp164 = -_tmp15 * x1;
  const Scalar _tmp165 = _tmp111 * x1;
  const Scalar _tmp166 = x1 - 2;
  const Scalar _tmp167 = -_tmp166 * x1;
  const Scalar _tmp168 = _tmp166 * _tmp7;
  const Scalar _tmp169 = -_tmp168;
  const Scalar _tmp170 = -_tmp166;
  const Scalar _tmp171 = _tmp166 * _tmp2;
  const Scalar _tmp172 = -_tmp171;
  const Scalar _tmp173 = 3 * _tmp22;
  const Scalar _tmp174 = _tmp50 * x0;
  const Scalar _tmp175 = _tmp166 * x0;
  const Scalar _tmp176 = _tmp61 * x1;
  const Scalar _tmp177 = _tmp2 * _tmp50;
  const Scalar _tmp178 = -_tmp177;
  const Scalar _tmp179 = _tmp7 - 1;
  const Scalar _tmp180 = _tmp109 + _tmp86;
  const Scalar _tmp181 = _tmp141 + Scalar(2.0);
  const Scalar _tmp182 = -_tmp181;
  const Scalar _tmp183 = Scalar(1.0) / (x1);
  const Scalar _tmp184 = _tmp86 * x0;
  const Scalar _tmp185 = _tmp88 * x0;
  const Scalar _tmp186 = _tmp45 * x1;
  const Scalar _tmp187 = Scalar(1.0) * _tmp22;
  const Scalar _tmp188 = -_tmp186;
  const Scalar _tmp189 = _tmp11 * _tmp61;
  const Scalar _tmp190 = _tmp61 * _tmp9;
  const Scalar _tmp191 = _tmp30 * _tmp61;
  const Scalar _tmp192 = -_tmp13 * _tmp61;
  const Scalar _tmp193 = -_tmp166 * _tmp86;
  const Scalar _tmp194 = _tmp40 + 8;
  const Scalar _tmp195 = _tmp13 + 4;
  const Scalar _tmp196 = -_tmp195;
  const Scalar _tmp197 = 2 * _tmp30;
  const Scalar _tmp198 = -_tmp197;
  const Scalar _tmp199 = _tmp34 + _tmp56;
  const Scalar _tmp200 = _tmp199 * x1;
  const Scalar _tmp201 = -_tmp200;
  const Scalar _tmp202 = 8 * _tmp45;
  const Scalar _tmp203 = -_tmp45;
  const Scalar _tmp204 = _tmp56 * x0;
  const Scalar _tmp205 = -_tmp204;
  const Scalar _tmp206 = _tmp2 + 4;
  const Scalar _tmp207 = _tmp56 * _tmp7;
  const Scalar _tmp208 = -_tmp207;
  const Scalar _tmp209 = _tmp5 * _tmp56;
  const Scalar _tmp210 = _tmp56 * _tmp61;
  const Scalar _tmp211 = _tmp166 * _tmp61;
  const Scalar _tmp212 = x1 - 4;
  const Scalar _tmp213 = _tmp24 + 3;
  const Scalar _tmp214 = _tmp128 + _tmp24;
  const Scalar _tmp215 = _tmp86 * _tmp9;
  const Scalar _tmp216 = Scalar(2.0) * _tmp22;
  const Scalar _tmp217 = [&]() {
    const Scalar base = x1;
    return base * base * base;
  }();
  const Scalar _tmp218 = _tmp2 * _tmp9;
  const Scalar _tmp219 = _tmp2 * _tmp30;
  const Scalar _tmp220 = -_tmp219;
  const Scalar _tmp221 = _tmp30 * _tmp56;
  const Scalar _tmp222 = _tmp166 * _tmp30;
  const Scalar _tmp223 = -_tmp128;
  const Scalar _tmp224 = _tmp9 * x0;
  const Scalar _tmp225 = _tmp57 * x0;
  const Scalar _tmp226 = -_tmp225;
  const Scalar _tmp227 = _tmp56 * x1;
  const Scalar _tmp228 = _tmp7 * _tmp81;
  const Scalar _tmp229 = _tmp15 * _tmp81;
  const Scalar _tmp230 = -_tmp229;
  const Scalar _tmp231 = _tmp2 * _tmp83;
  const Scalar _tmp232 = _tmp2 - 8;
  const Scalar _tmp233 = _tmp157 * _tmp166;
  const Scalar _tmp234 = -_tmp206;
  const Scalar _tmp235 = _tmp151 * _tmp166;
  const Scalar _tmp236 = _tmp86 * x1;
  const Scalar _tmp237 = -_tmp236;
  const Scalar _tmp238 = -_tmp199;
  const Scalar _tmp239 = _tmp96 + 4;
  const Scalar _tmp240 = _tmp85 * x0;
  const Scalar _tmp241 = -_tmp240;
  const Scalar _tmp242 = _tmp85 * x1;
  const Scalar _tmp243 = _tmp22 * _tmp85;
  const Scalar _tmp244 = _tmp2 * _tmp85;
  const Scalar _tmp245 = -_tmp243;
  const Scalar _tmp246 = _tmp7 + _tmp89;
  const Scalar _tmp247 = _tmp13 - 8;
  const Scalar _tmp248 = -_tmp247;
  const Scalar _tmp249 = Scalar(1.0) - _tmp121;
  const Scalar _tmp250 = _tmp50 - 1;
  const Scalar _tmp251 = -_tmp123;
  const Scalar _tmp252 = -_tmp78 + Scalar(-4.0);
  const Scalar _tmp253 = _tmp13 + _tmp40;
  const Scalar _tmp254 = -_tmp91;
  const Scalar _tmp255 = -_tmp97;
  const Scalar _tmp256 = _tmp40 * _tmp56;
  const Scalar _tmp257 = _tmp128 + 6;
  const Scalar _tmp258 = _tmp22 * _tmp56;
  const Scalar _tmp259 = [&]() {
    const Scalar base = x0;
    return base * base * base;
  }();
  const Scalar _tmp260 = -_tmp259;
  const Scalar _tmp261 = _tmp121 + Scalar(1.0);
  const Scalar _tmp262 = _tmp40 + 4;
  const Scalar _tmp263 = _tmp40 - 8;
  const Scalar _tmp264 = -_tmp263;
  const Scalar _tmp265 = -_tmp85;
  const Scalar _tmp266 = -_tmp88;
  const Scalar _tmp267 = -_tmp232;
  const Scalar _tmp268 = _tmp141 + Scalar(-2.0);
  const Scalar _tmp269 = 6 - _tmp2;
  const Scalar _tmp270 = _tmp151 * _tmp56;
  const Scalar _tmp271 = _tmp2 * _tmp86;
  const Scalar _tmp272 = _tmp22 * _tmp61;
  const Scalar _tmp273 = -_tmp184;
  const Scalar _tmp274 = -_tmp185;
  const Scalar _tmp275 = -_tmp176 * _tmp2;
  const Scalar _tmp276 = Scalar(1.0) / (_tmp61);
  const Scalar _tmp277 = _tmp45 + x1;
  const Scalar _tmp278 = _tmp277 * x0;
  const Scalar _tmp279 = -_tmp15 * x0;
  const Scalar _tmp280 = -_tmp175;
  const Scalar _tmp281 = -_tmp88 * x1;
  const Scalar _tmp282 = -_tmp56 * _tmp86;
  const Scalar _tmp283 = 2 * _tmp183;
  const Scalar _tmp284 = -_tmp132;
  const Scalar _tmp285 = _tmp2 * _tmp59;
  const Scalar _tmp286 = -_tmp122;
  const Scalar _tmp287 = -_tmp98;
  const Scalar _tmp288 = _tmp223 + _tmp41;
  const Scalar _tmp289 = 3 - _tmp24;
  const Scalar _tmp290 = 4 * _tmp183;
  const Scalar _tmp291 = -_tmp290;
  const Scalar _tmp292 = _tmp5 + x0;
  const Scalar _tmp293 = _tmp292 * x1;
  const Scalar _tmp294 = _tmp22 * _tmp58;
  const Scalar _tmp295 = _tmp56 * _tmp58;
  const Scalar _tmp296 = -_tmp56 * _tmp9;
  const Scalar _tmp297 = -_tmp56;
  const Scalar _tmp298 = x0 + 3;
  const Scalar _tmp299 = _tmp298 * _tmp7;
  const Scalar _tmp300 = _tmp57 + 2;
  const Scalar _tmp301 = _tmp22 + 2;
  const Scalar _tmp302 = _tmp301 * x1;
  const Scalar _tmp303 = -_tmp2 * _tmp212;
  const Scalar _tmp304 = 6 * _tmp183;
  const Scalar _tmp305 = _tmp7 + x0;

  // Output terms (1)
  static constexpr int kRows_result = 84;
  static constexpr int kCols_result = 84;
  static constexpr int kNumNonZero_result = 1472;
  static constexpr int kColPtrs_result[] = {
      0,    11,   24,   39,   54,   71,   88,   106,  125,  143,  161,  180,  198,  217,  235,
      252,  271,  290,  309,  326,  344,  362,  380,  398,  415,  432,  450,  469,  482,  494,
      512,  528,  546,  563,  581,  597,  615,  634,  653,  672,  689,  707,  725,  743,  761,
      778,  796,  814,  833,  852,  869,  885,  903,  920,  938,  956,  975,  994,  1013, 1032,
      1048, 1065, 1077, 1096, 1114, 1131, 1149, 1167, 1180, 1198, 1216, 1233, 1251, 1270, 1289,
      1308, 1326, 1345, 1364, 1383, 1402, 1419, 1437, 1454, 1472};
  static constexpr int kRowIndices_result[] = {
      1,  2,  3,  4,  5,  28, 29, 30, 31, 32, 33, 1,  7,  13, 14, 15, 16, 17, 28, 34, 35, 36, 37,
      38, 1,  2,  3,  4,  5,  8,  18, 19, 20, 21, 34, 39, 40, 41, 42, 1,  2,  3,  4,  5,  14, 18,
      22, 23, 24, 30, 35, 39, 43, 44, 1,  2,  3,  4,  5,  10, 15, 19, 22, 25, 26, 31, 36, 40, 43,
      46, 47, 1,  2,  3,  4,  5,  11, 16, 20, 23, 25, 27, 32, 37, 41, 44, 46, 48, 1,  2,  3,  4,
      5,  6,  12, 17, 21, 24, 26, 27, 33, 38, 42, 45, 47, 48, 0,  1,  7,  8,  9,  10, 11, 12, 13,
      14, 15, 16, 17, 28, 49, 50, 51, 52, 53, 0,  2,  7,  8,  9,  10, 11, 12, 18, 19, 20, 21, 29,
      49, 54, 55, 56, 57, 0,  3,  7,  8,  9,  10, 11, 12, 14, 18, 22, 23, 24, 30, 50, 54, 59, 60,
      0,  4,  7,  8,  9,  10, 11, 12, 15, 19, 22, 25, 26, 31, 51, 55, 58, 61, 62, 0,  5,  7,  8,
      9,  10, 11, 12, 16, 20, 23, 25, 27, 32, 52, 59, 61, 63, 0,  6,  7,  8,  9,  10, 11, 12, 17,
      21, 24, 26, 27, 33, 53, 57, 60, 62, 63, 1,  2,  7,  8,  13, 14, 15, 16, 17, 18, 19, 20, 21,
      34, 49, 64, 65, 66, 1,  3,  7,  13, 14, 15, 16, 17, 18, 22, 23, 24, 50, 64, 68, 69, 70, 1,
      4,  7,  10, 13, 14, 15, 16, 17, 19, 22, 25, 26, 36, 51, 65, 68, 71, 72, 1,  5,  7,  11, 13,
      14, 15, 16, 17, 20, 23, 25, 27, 37, 52, 66, 69, 71, 73, 1,  6,  7,  12, 13, 14, 15, 16, 17,
      21, 24, 26, 27, 38, 53, 67, 70, 72, 73, 2,  3,  8,  14, 18, 19, 20, 21, 22, 23, 24, 39, 54,
      64, 74, 75, 76, 2,  4,  8,  10, 15, 18, 19, 20, 21, 22, 25, 26, 40, 55, 65, 74, 77, 78, 2,
      5,  8,  11, 16, 18, 19, 20, 21, 23, 25, 27, 41, 56, 66, 75, 77, 79, 2,  6,  8,  12, 17, 18,
      19, 20, 21, 24, 26, 27, 42, 57, 67, 76, 78, 79, 3,  4,  10, 14, 15, 18, 19, 22, 23, 24, 25,
      26, 43, 58, 68, 74, 80, 81, 3,  5,  11, 14, 16, 18, 20, 22, 23, 24, 25, 27, 44, 59, 75, 80,
      82, 3,  6,  12, 14, 17, 18, 21, 22, 23, 24, 26, 27, 45, 60, 70, 81, 82, 4,  5,  10, 11, 15,
      16, 19, 20, 22, 23, 25, 26, 27, 46, 61, 71, 80, 83, 4,  6,  10, 12, 15, 17, 19, 21, 22, 24,
      25, 26, 27, 47, 62, 72, 78, 81, 83, 5,  6,  11, 12, 16, 17, 20, 21, 23, 24, 25, 26, 27, 1,
      28, 34, 35, 36, 37, 38, 49, 50, 51, 52, 53, 2,  8,  28, 29, 30, 31, 32, 33, 34, 39, 40, 41,
      42, 49, 54, 55, 56, 57, 3,  9,  28, 29, 30, 31, 32, 33, 35, 39, 43, 44, 50, 54, 59, 60, 4,
      10, 28, 29, 30, 31, 32, 33, 36, 40, 43, 46, 47, 51, 55, 58, 61, 62, 5,  11, 28, 29, 30, 31,
      32, 33, 37, 41, 44, 46, 48, 52, 59, 61, 63, 6,  12, 28, 29, 30, 31, 32, 33, 38, 42, 45, 47,
      48, 53, 57, 60, 62, 63, 1,  2,  13, 28, 35, 36, 37, 38, 39, 40, 41, 42, 49, 64, 65, 66, 1,
      3,  14, 28, 30, 34, 35, 36, 37, 38, 39, 43, 44, 50, 64, 68, 69, 70, 1,  4,  15, 28, 31, 34,
      35, 36, 37, 38, 40, 43, 46, 47, 51, 65, 68, 71, 72, 1,  5,  16, 28, 32, 34, 35, 36, 37, 38,
      41, 44, 46, 48, 52, 66, 69, 71, 73, 1,  6,  17, 28, 33, 34, 35, 36, 37, 38, 42, 45, 47, 48,
      53, 67, 70, 72, 73, 2,  3,  18, 30, 34, 35, 39, 40, 41, 42, 43, 44, 54, 64, 74, 75, 76, 2,
      4,  19, 31, 34, 36, 39, 40, 41, 42, 43, 46, 47, 55, 65, 74, 77, 78, 2,  5,  20, 32, 34, 37,
      39, 40, 41, 42, 44, 46, 48, 56, 66, 75, 77, 79, 2,  6,  21, 33, 34, 38, 39, 40, 41, 42, 45,
      47, 48, 57, 67, 76, 78, 79, 3,  4,  22, 30, 31, 35, 36, 39, 40, 43, 44, 46, 47, 58, 68, 74,
      80, 81, 3,  5,  23, 30, 32, 35, 37, 39, 41, 43, 44, 46, 48, 59, 75, 80, 82, 3,  6,  24, 30,
      33, 35, 38, 39, 42, 43, 44, 45, 47, 48, 60, 70, 81, 82, 4,  5,  25, 31, 32, 36, 37, 40, 41,
      43, 44, 46, 47, 48, 61, 71, 80, 83, 4,  6,  26, 31, 33, 36, 38, 40, 42, 43, 45, 46, 47, 48,
      62, 72, 78, 81, 83, 5,  6,  27, 32, 33, 37, 38, 41, 42, 44, 45, 46, 47, 48, 63, 73, 79, 82,
      83, 8,  13, 28, 29, 34, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 9,  14, 28, 30, 49,
      50, 51, 52, 53, 54, 59, 60, 64, 68, 69, 70, 10, 15, 28, 31, 36, 49, 50, 51, 52, 53, 55, 58,
      61, 62, 65, 68, 71, 72, 11, 16, 28, 32, 37, 49, 50, 51, 52, 53, 59, 61, 63, 66, 69, 71, 73,
      12, 17, 28, 33, 38, 49, 50, 51, 52, 53, 57, 60, 62, 63, 67, 70, 72, 73, 8,  9,  18, 29, 30,
      39, 49, 50, 54, 55, 56, 57, 59, 60, 64, 74, 75, 76, 8,  10, 19, 29, 31, 40, 49, 51, 54, 55,
      56, 57, 58, 61, 62, 65, 74, 77, 78, 8,  11, 20, 29, 32, 41, 49, 52, 54, 55, 56, 57, 59, 61,
      63, 66, 75, 77, 79, 8,  12, 21, 29, 33, 42, 49, 53, 54, 55, 56, 57, 60, 62, 63, 67, 76, 78,
      79, 9,  10, 22, 30, 31, 43, 50, 51, 54, 55, 58, 59, 60, 61, 62, 68, 74, 80, 81, 9,  11, 23,
      30, 32, 44, 50, 52, 54, 59, 60, 61, 63, 75, 80, 82, 9,  12, 24, 30, 33, 45, 50, 53, 54, 57,
      59, 60, 62, 63, 70, 81, 82, 10, 11, 31, 32, 51, 52, 55, 58, 59, 61, 62, 63, 10, 12, 26, 31,
      33, 47, 51, 53, 55, 57, 58, 60, 61, 62, 63, 72, 78, 81, 83, 11, 12, 27, 32, 33, 48, 52, 53,
      57, 59, 60, 61, 62, 63, 73, 79, 82, 83, 13, 14, 18, 34, 39, 49, 50, 54, 64, 65, 66, 68, 69,
      70, 74, 75, 76, 13, 15, 19, 34, 36, 40, 49, 51, 55, 64, 65, 66, 68, 71, 72, 74, 77, 78, 13,
      16, 20, 34, 37, 41, 49, 52, 56, 64, 65, 66, 69, 71, 73, 75, 77, 79, 13, 21, 34, 42, 49, 57,
      64, 65, 66, 67, 76, 78, 79, 14, 15, 22, 36, 43, 50, 51, 58, 64, 65, 68, 69, 70, 71, 72, 74,
      80, 81, 14, 16, 23, 37, 44, 50, 52, 59, 64, 66, 68, 69, 70, 71, 73, 75, 80, 82, 14, 17, 24,
      38, 45, 50, 53, 60, 64, 67, 68, 69, 70, 72, 73, 81, 82, 15, 16, 25, 36, 37, 46, 51, 52, 61,
      65, 66, 68, 69, 71, 72, 73, 80, 83, 15, 17, 26, 36, 38, 47, 51, 53, 62, 65, 67, 68, 70, 71,
      72, 73, 78, 81, 83, 16, 17, 27, 37, 38, 48, 52, 53, 63, 66, 67, 69, 70, 71, 72, 73, 79, 82,
      83, 18, 19, 22, 39, 40, 43, 54, 55, 58, 64, 65, 68, 74, 75, 76, 77, 78, 80, 81, 18, 20, 23,
      39, 41, 44, 54, 56, 59, 64, 66, 74, 75, 76, 77, 79, 80, 82, 18, 21, 24, 39, 42, 45, 54, 57,
      60, 64, 67, 70, 74, 75, 76, 78, 79, 81, 82, 19, 20, 25, 40, 41, 46, 55, 56, 61, 65, 66, 71,
      74, 75, 77, 78, 79, 80, 83, 19, 21, 26, 40, 42, 47, 55, 57, 62, 65, 67, 72, 74, 76, 77, 78,
      79, 81, 83, 20, 21, 27, 41, 42, 48, 56, 57, 63, 66, 67, 73, 75, 76, 77, 78, 79, 82, 83, 22,
      23, 25, 43, 44, 46, 58, 59, 61, 68, 71, 74, 75, 80, 81, 82, 83, 22, 24, 26, 43, 45, 47, 58,
      60, 62, 68, 70, 72, 74, 78, 80, 81, 82, 83, 23, 24, 27, 44, 45, 48, 59, 60, 63, 70, 73, 75,
      79, 80, 81, 82, 83, 25, 26, 27, 46, 47, 48, 61, 62, 63, 71, 72, 73, 78, 79, 80, 81, 82, 83};
  Scalar result_empty_value_ptr[1472];
  Eigen::SparseMatrix<Scalar> result = Eigen::Map<const Eigen::SparseMatrix<Scalar>>(
      kRows_result, kCols_result, kNumNonZero_result, kColPtrs_result, kRowIndices_result,
      result_empty_value_ptr);
  Scalar* result_value_ptr = result.valuePtr();

  result_value_ptr[0] = -8;
  result_value_ptr[1] = -_tmp1 * _tmp3;
  result_value_ptr[2] = _tmp4;
  result_value_ptr[3] = -_tmp1 * _tmp5;
  result_value_ptr[4] = 8 * _tmp0;
  result_value_ptr[5] = _tmp6;
  result_value_ptr[6] = -_tmp0 * _tmp7;
  result_value_ptr[7] = _tmp8;
  result_value_ptr[8] = _tmp8;
  result_value_ptr[9] = -_tmp0 * _tmp9;
  result_value_ptr[10] = _tmp0;
  result_value_ptr[11] = -_tmp10;
  result_value_ptr[12] = 4;
  result_value_ptr[13] = -16;
  result_value_ptr[14] = _tmp12;
  result_value_ptr[15] = _tmp14;
  result_value_ptr[16] = -2;
  result_value_ptr[17] = 4;
  result_value_ptr[18] = _tmp14;
  result_value_ptr[19] = _tmp15;
  result_value_ptr[20] = _tmp13;
  result_value_ptr[21] = _tmp16;
  result_value_ptr[22] = _tmp17;
  result_value_ptr[23] = _tmp19;
  result_value_ptr[24] = _tmp20;
  result_value_ptr[25] = _tmp21 + _tmp22 + _tmp23 + 3;
  result_value_ptr[26] = -6;
  result_value_ptr[27] = _tmp25;
  result_value_ptr[28] = -12;
  result_value_ptr[29] = _tmp5;
  result_value_ptr[30] = _tmp26;
  result_value_ptr[31] = _tmp27;
  result_value_ptr[32] = _tmp27;
  result_value_ptr[33] = _tmp29;
  result_value_ptr[34] = _tmp30;
  result_value_ptr[35] = _tmp32;
  result_value_ptr[36] = _tmp33;
  result_value_ptr[37] = _tmp34;
  result_value_ptr[38] = _tmp31;
  result_value_ptr[39] = _tmp14;
  result_value_ptr[40] = -_tmp3;
  result_value_ptr[41] = Scalar(8.0);
  result_value_ptr[42] = _tmp35;
  result_value_ptr[43] = 4;
  result_value_ptr[44] = -_tmp36;
  result_value_ptr[45] = _tmp37 + Scalar(2.0);
  result_value_ptr[46] = Scalar(2.0);
  result_value_ptr[47] = _tmp36;
  result_value_ptr[48] = _tmp39;
  result_value_ptr[49] = _tmp41;
  result_value_ptr[50] = 4;
  result_value_ptr[51] = -16;
  result_value_ptr[52] = _tmp43;
  result_value_ptr[53] = _tmp44;
  result_value_ptr[54] = -_tmp46;
  result_value_ptr[55] = -_tmp22 * _tmp3;
  result_value_ptr[56] = _tmp33;
  result_value_ptr[57] = -_tmp22 * _tmp5 - _tmp34;
  result_value_ptr[58] = _tmp47;
  result_value_ptr[59] = _tmp49;
  result_value_ptr[60] = x1;
  result_value_ptr[61] = _tmp52;
  result_value_ptr[62] = _tmp53;
  result_value_ptr[63] = -_tmp54;
  result_value_ptr[64] = _tmp53;
  result_value_ptr[65] = -_tmp55;
  result_value_ptr[66] = _tmp55 * _tmp56;
  result_value_ptr[67] = _tmp34;
  result_value_ptr[68] = x1;
  result_value_ptr[69] = _tmp34;
  result_value_ptr[70] = _tmp55 * _tmp57;
  result_value_ptr[71] = _tmp43;
  result_value_ptr[72] = -_tmp13 - 2;
  result_value_ptr[73] = 4;
  result_value_ptr[74] = _tmp19;
  result_value_ptr[75] = _tmp1 + _tmp59 + 8;
  result_value_ptr[76] = _tmp0 * _tmp60;
  result_value_ptr[77] = Scalar(0.5) * _tmp0;
  result_value_ptr[78] = 3;
  result_value_ptr[79] = -_tmp62;
  result_value_ptr[80] = _tmp2;
  result_value_ptr[81] = _tmp0;
  result_value_ptr[82] = _tmp63;
  result_value_ptr[83] = _tmp64;
  result_value_ptr[84] = -_tmp65;
  result_value_ptr[85] = _tmp2 * _tmp65;
  result_value_ptr[86] = -_tmp59 * _tmp66;
  result_value_ptr[87] = _tmp65;
  result_value_ptr[88] = _tmp68;
  result_value_ptr[89] = -_tmp3 * _tmp7;
  result_value_ptr[90] = _tmp40;
  result_value_ptr[91] = _tmp69;
  result_value_ptr[92] = _tmp70;
  result_value_ptr[93] = _tmp71 - _tmp72;
  result_value_ptr[94] = _tmp73;
  result_value_ptr[95] = _tmp40;
  result_value_ptr[96] = -_tmp37;
  result_value_ptr[97] = _tmp75;
  result_value_ptr[98] = _tmp23;
  result_value_ptr[99] = -_tmp76;
  result_value_ptr[100] = _tmp77 * _tmp9;
  result_value_ptr[101] = Scalar(4.0) - _tmp78;
  result_value_ptr[102] = -_tmp79 * _tmp9;
  result_value_ptr[103] = 16 - _tmp42;
  result_value_ptr[104] = _tmp80;
  result_value_ptr[105] = _tmp72;
  result_value_ptr[106] = Scalar(0.5);
  result_value_ptr[107] = _tmp63;
  result_value_ptr[108] = _tmp45 + _tmp7;
  result_value_ptr[109] = _tmp5;
  result_value_ptr[110] = 1;
  result_value_ptr[111] = -2;
  result_value_ptr[112] = 2;
  result_value_ptr[113] = _tmp81;
  result_value_ptr[114] = _tmp82;
  result_value_ptr[115] = _tmp84;
  result_value_ptr[116] = _tmp71;
  result_value_ptr[117] = _tmp34;
  result_value_ptr[118] = _tmp7;
  result_value_ptr[119] = _tmp24 * _tmp85;
  result_value_ptr[120] = (Scalar(3) / Scalar(2)) * _tmp55;
  result_value_ptr[121] = _tmp24 * _tmp86;
  result_value_ptr[122] = _tmp87;
  result_value_ptr[123] = _tmp24 * _tmp88;
  result_value_ptr[124] = 3 * _tmp30;
  result_value_ptr[125] = Scalar(-1.0);
  result_value_ptr[126] = _tmp40;
  result_value_ptr[127] = _tmp90;
  result_value_ptr[128] = -_tmp14 - _tmp91 - 2;
  result_value_ptr[129] = -2;
  result_value_ptr[130] = 4;
  result_value_ptr[131] = -4;
  result_value_ptr[132] = _tmp12;
  result_value_ptr[133] = _tmp13;
  result_value_ptr[134] = _tmp7;
  result_value_ptr[135] = _tmp7;
  result_value_ptr[136] = _tmp17;
  result_value_ptr[137] = _tmp93;
  result_value_ptr[138] = _tmp94;
  result_value_ptr[139] = _tmp95;
  result_value_ptr[140] = _tmp97;
  result_value_ptr[141] = _tmp92;
  result_value_ptr[142] = _tmp98;
  result_value_ptr[143] = Scalar(0.5);
  result_value_ptr[144] = _tmp49;
  result_value_ptr[145] = _tmp45;
  result_value_ptr[146] = _tmp5;
  result_value_ptr[147] = 1 - Scalar(2.0) * _tmp0;
  result_value_ptr[148] = -2;
  result_value_ptr[149] = 2;
  result_value_ptr[150] = _tmp81;
  result_value_ptr[151] = _tmp99;
  result_value_ptr[152] = _tmp48 * _tmp86;
  result_value_ptr[153] = _tmp48;
  result_value_ptr[154] = _tmp30;
  result_value_ptr[155] = _tmp100;
  result_value_ptr[156] = _tmp101 * _tmp50;
  result_value_ptr[157] = -Scalar(1.0) * _tmp62;
  result_value_ptr[158] = _tmp101 * _tmp102;
  result_value_ptr[159] = _tmp101 * _tmp30;
  result_value_ptr[160] = _tmp101;
  result_value_ptr[161] = -_tmp103 - _tmp54;
  result_value_ptr[162] = 8;
  result_value_ptr[163] = -_tmp45 * _tmp50;
  result_value_ptr[164] = -_tmp5 * _tmp50;
  result_value_ptr[165] = _tmp104;
  result_value_ptr[166] = _tmp7 + _tmp9;
  result_value_ptr[167] = _tmp105;
  result_value_ptr[168] = -_tmp50 * _tmp81;
  result_value_ptr[169] = 4;
  result_value_ptr[170] = _tmp106;
  result_value_ptr[171] = _tmp2;
  result_value_ptr[172] = Scalar(-2.0);
  result_value_ptr[173] = _tmp2;
  result_value_ptr[174] = _tmp2;
  result_value_ptr[175] = _tmp108;
  result_value_ptr[176] = _tmp17;
  result_value_ptr[177] = 2;
  result_value_ptr[178] = -2;
  result_value_ptr[179] = -4;
  result_value_ptr[180] = Scalar(1.0);
  result_value_ptr[181] = -4;
  result_value_ptr[182] = _tmp89;
  result_value_ptr[183] = _tmp18;
  result_value_ptr[184] = 2;
  result_value_ptr[185] = -4;
  result_value_ptr[186] = -_tmp109 - _tmp24 - 2;
  result_value_ptr[187] = _tmp11;
  result_value_ptr[188] = Scalar(-1.0);
  result_value_ptr[189] = _tmp110;
  result_value_ptr[190] = _tmp111;
  result_value_ptr[191] = _tmp113;
  result_value_ptr[192] = -2;
  result_value_ptr[193] = _tmp114;
  result_value_ptr[194] = _tmp97;
  result_value_ptr[195] = _tmp115;
  result_value_ptr[196] = _tmp116;
  result_value_ptr[197] = -_tmp7 * _tmp92;
  result_value_ptr[198] = Scalar(-1.0);
  result_value_ptr[199] = -_tmp117;
  result_value_ptr[200] = _tmp90;
  result_value_ptr[201] = _tmp19;
  result_value_ptr[202] = -2;
  result_value_ptr[203] = 4;
  result_value_ptr[204] = -4;
  result_value_ptr[205] = _tmp119 + _tmp120 + _tmp47;
  result_value_ptr[206] = _tmp10;
  result_value_ptr[207] = Scalar(3.0) - _tmp121;
  result_value_ptr[208] = -_tmp102 * _tmp7;
  result_value_ptr[209] = _tmp102 * _tmp5;
  result_value_ptr[210] = -_tmp102 * _tmp61;
  result_value_ptr[211] = _tmp74;
  result_value_ptr[212] = _tmp122;
  result_value_ptr[213] = _tmp96;
  result_value_ptr[214] = -_tmp13 * _tmp30;
  result_value_ptr[215] = _tmp41;
  result_value_ptr[216] = _tmp70;
  result_value_ptr[217] = _tmp123;
  result_value_ptr[218] = _tmp40;
  result_value_ptr[219] = -8;
  result_value_ptr[220] = 2;
  result_value_ptr[221] = _tmp124 + 32;
  result_value_ptr[222] = _tmp125;
  result_value_ptr[223] = _tmp42;
  result_value_ptr[224] = 4;
  result_value_ptr[225] = -8;
  result_value_ptr[226] = _tmp13;
  result_value_ptr[227] = _tmp7;
  result_value_ptr[228] = _tmp7;
  result_value_ptr[229] = _tmp17;
  result_value_ptr[230] = _tmp17;
  result_value_ptr[231] = _tmp94;
  result_value_ptr[232] = _tmp127;
  result_value_ptr[233] = _tmp128;
  result_value_ptr[234] = _tmp130;
  result_value_ptr[235] = _tmp85;
  result_value_ptr[236] = 1;
  result_value_ptr[237] = -4;
  result_value_ptr[238] = 16;
  result_value_ptr[239] = _tmp38 + _tmp85;
  result_value_ptr[240] = _tmp13;
  result_value_ptr[241] = 2;
  result_value_ptr[242] = -4;
  result_value_ptr[243] = _tmp131;
  result_value_ptr[244] = -1;
  result_value_ptr[245] = _tmp96;
  result_value_ptr[246] = _tmp2;
  result_value_ptr[247] = _tmp132;
  result_value_ptr[248] = _tmp13;
  result_value_ptr[249] = _tmp134;
  result_value_ptr[250] = _tmp13;
  result_value_ptr[251] = _tmp42;
  result_value_ptr[252] = _tmp129;
  result_value_ptr[253] = 4;
  result_value_ptr[254] = _tmp17;
  result_value_ptr[255] = -1;
  result_value_ptr[256] = _tmp42;
  result_value_ptr[257] = _tmp135;
  result_value_ptr[258] = _tmp109 + _tmp89;
  result_value_ptr[259] = x0;
  result_value_ptr[260] = _tmp17;
  result_value_ptr[261] = _tmp136;
  result_value_ptr[262] = x0;
  result_value_ptr[263] = Scalar(-1.0);
  result_value_ptr[264] = x0;
  result_value_ptr[265] = x1;
  result_value_ptr[266] = Scalar(-1.0);
  result_value_ptr[267] = _tmp86;
  result_value_ptr[268] = _tmp34;
  result_value_ptr[269] = -1;
  result_value_ptr[270] = -_tmp137;
  result_value_ptr[271] = _tmp138;
  result_value_ptr[272] = 4;
  result_value_ptr[273] = 2;
  result_value_ptr[274] = _tmp139;
  result_value_ptr[275] = -8;
  result_value_ptr[276] = _tmp140;
  result_value_ptr[277] = _tmp17;
  result_value_ptr[278] = _tmp142;
  result_value_ptr[279] = 2;
  result_value_ptr[280] = _tmp21;
  result_value_ptr[281] = _tmp143;
  result_value_ptr[282] = _tmp112;
  result_value_ptr[283] = 2;
  result_value_ptr[284] = _tmp135;
  result_value_ptr[285] = _tmp11;
  result_value_ptr[286] = -_tmp135;
  result_value_ptr[287] = -_tmp58 * _tmp81;
  result_value_ptr[288] = _tmp140;
  result_value_ptr[289] = 6 - _tmp21;
  result_value_ptr[290] = _tmp145;
  result_value_ptr[291] = _tmp45;
  result_value_ptr[292] = _tmp13;
  result_value_ptr[293] = _tmp89;
  result_value_ptr[294] = -16 * x0;
  result_value_ptr[295] = _tmp147;
  result_value_ptr[296] = _tmp113;
  result_value_ptr[297] = _tmp17;
  result_value_ptr[298] = -_tmp15 * _tmp56 + _tmp2;
  result_value_ptr[299] = _tmp141;
  result_value_ptr[300] = _tmp33;
  result_value_ptr[301] = _tmp29;
  result_value_ptr[302] = _tmp148;
  result_value_ptr[303] = _tmp149 * _tmp15;
  result_value_ptr[304] = _tmp150;
  result_value_ptr[305] = -_tmp15 * _tmp89;
  result_value_ptr[306] = -_tmp15 * _tmp86;
  result_value_ptr[307] = -_tmp15 * _tmp30;
  result_value_ptr[308] = _tmp150;
  result_value_ptr[309] = -_tmp151 * _tmp7;
  result_value_ptr[310] = _tmp96;
  result_value_ptr[311] = -_tmp151;
  result_value_ptr[312] = _tmp75;
  result_value_ptr[313] = -_tmp152 + _tmp153 - 8;
  result_value_ptr[314] = _tmp155;
  result_value_ptr[315] = _tmp155;
  result_value_ptr[316] = _tmp156;
  result_value_ptr[317] = _tmp7;
  result_value_ptr[318] = _tmp74;
  result_value_ptr[319] = _tmp73;
  result_value_ptr[320] = 4;
  result_value_ptr[321] = -6;
  result_value_ptr[322] = 2;
  result_value_ptr[323] = _tmp17;
  result_value_ptr[324] = _tmp109;
  result_value_ptr[325] = 6;
  result_value_ptr[326] = _tmp158;
  result_value_ptr[327] = 4;
  result_value_ptr[328] = _tmp157;
  result_value_ptr[329] = -1;
  result_value_ptr[330] = 2;
  result_value_ptr[331] = _tmp159;
  result_value_ptr[332] = _tmp136 + _tmp160 + _tmp161;
  result_value_ptr[333] = _tmp161;
  result_value_ptr[334] = _tmp163;
  result_value_ptr[335] = x0;
  result_value_ptr[336] = Scalar(-1.0);
  result_value_ptr[337] = x0;
  result_value_ptr[338] = _tmp164;
  result_value_ptr[339] = _tmp99;
  result_value_ptr[340] = _tmp164;
  result_value_ptr[341] = _tmp34;
  result_value_ptr[342] = -_tmp165;
  result_value_ptr[343] = _tmp167;
  result_value_ptr[344] = _tmp169;
  result_value_ptr[345] = _tmp7;
  result_value_ptr[346] = _tmp170;
  result_value_ptr[347] = _tmp60 * x1;
  result_value_ptr[348] = _tmp54;
  result_value_ptr[349] = _tmp172;
  result_value_ptr[350] = _tmp167;
  result_value_ptr[351] = _tmp167 + _tmp173 + _tmp174;
  result_value_ptr[352] = _tmp175;
  result_value_ptr[353] = -_tmp176;
  result_value_ptr[354] = _tmp132;
  result_value_ptr[355] = x1;
  result_value_ptr[356] = _tmp178;
  result_value_ptr[357] = -_tmp51;
  result_value_ptr[358] = -_tmp151 * _tmp50;
  result_value_ptr[359] = _tmp105;
  result_value_ptr[360] = _tmp179 * _tmp50;
  result_value_ptr[361] = _tmp87;
  result_value_ptr[362] = _tmp37;
  result_value_ptr[363] = -_tmp180 * x0;
  result_value_ptr[364] = Scalar(1.0);
  result_value_ptr[365] = -_tmp180 * _tmp2;
  result_value_ptr[366] = _tmp17 + _tmp77;
  result_value_ptr[367] = _tmp78;
  result_value_ptr[368] = _tmp121;
  result_value_ptr[369] = _tmp121;
  result_value_ptr[370] = -_tmp121 + Scalar(-4.0);
  result_value_ptr[371] = -_tmp180 * _tmp7;
  result_value_ptr[372] = _tmp180 * _tmp5;
  result_value_ptr[373] = -_tmp180 * _tmp61;
  result_value_ptr[374] = -_tmp121 - _tmp142;
  result_value_ptr[375] = _tmp182;
  result_value_ptr[376] = _tmp78 + Scalar(2.0);
  result_value_ptr[377] = -Scalar(2.0) * _tmp183;
  result_value_ptr[378] = Scalar(-1.0);
  result_value_ptr[379] = Scalar(2.0);
  result_value_ptr[380] = _tmp109;
  result_value_ptr[381] = _tmp73;
  result_value_ptr[382] = _tmp22;
  result_value_ptr[383] = _tmp71;
  result_value_ptr[384] = _tmp71;
  result_value_ptr[385] = _tmp184;
  result_value_ptr[386] = -_tmp31 * _tmp50;
  result_value_ptr[387] = -_tmp109 - _tmp185 - _tmp186;
  result_value_ptr[388] = _tmp33;
  result_value_ptr[389] = _tmp90;
  result_value_ptr[390] = _tmp187;
  result_value_ptr[391] = _tmp188;
  result_value_ptr[392] = _tmp128;
  result_value_ptr[393] = _tmp109;
  result_value_ptr[394] = _tmp90;
  result_value_ptr[395] = x0;
  result_value_ptr[396] = _tmp188;
  result_value_ptr[397] = _tmp100;
  result_value_ptr[398] = _tmp109;
  result_value_ptr[399] = 4;
  result_value_ptr[400] = _tmp139;
  result_value_ptr[401] = _tmp71;
  result_value_ptr[402] = Scalar(1.0);
  result_value_ptr[403] = _tmp184;
  result_value_ptr[404] = _tmp21;
  result_value_ptr[405] = x0;
  result_value_ptr[406] = _tmp107 + _tmp17 + _tmp33 - 2;
  result_value_ptr[407] = _tmp90;
  result_value_ptr[408] = _tmp112;
  result_value_ptr[409] = 2;
  result_value_ptr[410] = _tmp189;
  result_value_ptr[411] = _tmp108;
  result_value_ptr[412] = _tmp190;
  result_value_ptr[413] = -_tmp191;
  result_value_ptr[414] = _tmp192;
  result_value_ptr[415] = _tmp166;
  result_value_ptr[416] = _tmp14;
  result_value_ptr[417] = _tmp43;
  result_value_ptr[418] = _tmp168;
  result_value_ptr[419] = 8;
  result_value_ptr[420] = _tmp193;
  result_value_ptr[421] = Scalar(-4.0);
  result_value_ptr[422] = _tmp170;
  result_value_ptr[423] = _tmp169;
  result_value_ptr[424] = _tmp171 + _tmp176 + _tmp82;
  result_value_ptr[425] = _tmp194;
  result_value_ptr[426] = _tmp196;
  result_value_ptr[427] = _tmp198;
  result_value_ptr[428] = _tmp96;
  result_value_ptr[429] = _tmp201;
  result_value_ptr[430] = _tmp37;
  result_value_ptr[431] = _tmp198;
  result_value_ptr[432] = 16;
  result_value_ptr[433] = 8;
  result_value_ptr[434] = -4;
  result_value_ptr[435] = _tmp40 + 12;
  result_value_ptr[436] = 8;
  result_value_ptr[437] = Scalar(2.0);
  result_value_ptr[438] = _tmp40 * _tmp50;
  result_value_ptr[439] = _tmp20;
  result_value_ptr[440] = _tmp13;
  result_value_ptr[441] = _tmp196;
  result_value_ptr[442] = _tmp202 - _tmp33 + Scalar(-4.0);
  result_value_ptr[443] = _tmp13;
  result_value_ptr[444] = 4;
  result_value_ptr[445] = 8;
  result_value_ptr[446] = -4;
  result_value_ptr[447] = _tmp97;
  result_value_ptr[448] = 4;
  result_value_ptr[449] = 6;
  result_value_ptr[450] = _tmp96;
  result_value_ptr[451] = _tmp2;
  result_value_ptr[452] = _tmp48;
  result_value_ptr[453] = _tmp13;
  result_value_ptr[454] = _tmp34;
  result_value_ptr[455] = -4;
  result_value_ptr[456] = -_tmp52;
  result_value_ptr[457] = Scalar(2.0);
  result_value_ptr[458] = -_tmp53;
  result_value_ptr[459] = _tmp40;
  result_value_ptr[460] = _tmp54;
  result_value_ptr[461] = -_tmp18 - _tmp2 - _tmp53;
  result_value_ptr[462] = _tmp111;
  result_value_ptr[463] = _tmp184;
  result_value_ptr[464] = _tmp33;
  result_value_ptr[465] = _tmp13;
  result_value_ptr[466] = _tmp163;
  result_value_ptr[467] = _tmp29;
  result_value_ptr[468] = _tmp203;
  result_value_ptr[469] = _tmp4;
  result_value_ptr[470] = _tmp205;
  result_value_ptr[471] = _tmp1 * _tmp60;
  result_value_ptr[472] = _tmp134;
  result_value_ptr[473] = _tmp101;
  result_value_ptr[474] = _tmp206;
  result_value_ptr[475] = 6;
  result_value_ptr[476] = _tmp182;
  result_value_ptr[477] = -_tmp1 * _tmp61;
  result_value_ptr[478] = _tmp208;
  result_value_ptr[479] = _tmp13;
  result_value_ptr[480] = _tmp209;
  result_value_ptr[481] = _tmp1 - _tmp210;
  result_value_ptr[482] = _tmp111;
  result_value_ptr[483] = _tmp108 + _tmp91 - 6;
  result_value_ptr[484] = _tmp211;
  result_value_ptr[485] = _tmp107;
  result_value_ptr[486] = -_tmp212 * _tmp61;
  result_value_ptr[487] = -_tmp148;
  result_value_ptr[488] = -_tmp5 * _tmp61;
  result_value_ptr[489] = (Scalar(3) / Scalar(2)) * _tmp0;
  result_value_ptr[490] = _tmp213;
  result_value_ptr[491] = -_tmp214;
  result_value_ptr[492] = _tmp128 - 9;
  result_value_ptr[493] = _tmp24;
  result_value_ptr[494] = _tmp78;
  result_value_ptr[495] = -4;
  result_value_ptr[496] = _tmp86;
  result_value_ptr[497] = _tmp109 + _tmp153 - 2;
  result_value_ptr[498] = _tmp213;
  result_value_ptr[499] = _tmp213;
  result_value_ptr[500] = _tmp215;
  result_value_ptr[501] = _tmp131;
  result_value_ptr[502] = _tmp37;
  result_value_ptr[503] = -_tmp216;
  result_value_ptr[504] = _tmp38;
  result_value_ptr[505] = Scalar(-2.0);
  result_value_ptr[506] = _tmp216;
  result_value_ptr[507] = x0;
  result_value_ptr[508] = _tmp34;
  result_value_ptr[509] = -2;
  result_value_ptr[510] = -1;
  result_value_ptr[511] = -4;
  result_value_ptr[512] = _tmp197;
  result_value_ptr[513] = _tmp15;
  result_value_ptr[514] = _tmp2;
  result_value_ptr[515] = _tmp47;
  result_value_ptr[516] = -_tmp166 * _tmp50 + _tmp21 - _tmp217;
  result_value_ptr[517] = _tmp21;
  result_value_ptr[518] = _tmp218;
  result_value_ptr[519] = _tmp17;
  result_value_ptr[520] = _tmp30;
  result_value_ptr[521] = _tmp75;
  result_value_ptr[522] = _tmp220;
  result_value_ptr[523] = _tmp221;
  result_value_ptr[524] = _tmp211;
  result_value_ptr[525] = -_tmp102 * _tmp166;
  result_value_ptr[526] = -_tmp222;
  result_value_ptr[527] = _tmp170;
  result_value_ptr[528] = _tmp45;
  result_value_ptr[529] = _tmp81;
  result_value_ptr[530] = _tmp109;
  result_value_ptr[531] = _tmp71;
  result_value_ptr[532] = _tmp223;
  result_value_ptr[533] = -_tmp135 - _tmp2;
  result_value_ptr[534] = -_tmp224;
  result_value_ptr[535] = x0;
  result_value_ptr[536] = _tmp205;
  result_value_ptr[537] = _tmp45;
  result_value_ptr[538] = _tmp203;
  result_value_ptr[539] = _tmp45;
  result_value_ptr[540] = _tmp226;
  result_value_ptr[541] = _tmp135 * _tmp61;
  result_value_ptr[542] = _tmp135;
  result_value_ptr[543] = _tmp140;
  result_value_ptr[544] = _tmp81;
  result_value_ptr[545] = _tmp11;
  result_value_ptr[546] = _tmp34;
  result_value_ptr[547] = _tmp34;
  result_value_ptr[548] = -1;
  result_value_ptr[549] = _tmp96;
  result_value_ptr[550] = -3;
  result_value_ptr[551] = -3;
  result_value_ptr[552] = _tmp157 + _tmp17 + _tmp30;
  result_value_ptr[553] = 1;
  result_value_ptr[554] = _tmp96;
  result_value_ptr[555] = _tmp30;
  result_value_ptr[556] = _tmp220;
  result_value_ptr[557] = _tmp66 * x1;
  result_value_ptr[558] = _tmp99;
  result_value_ptr[559] = _tmp96;
  result_value_ptr[560] = _tmp227;
  result_value_ptr[561] = x1;
  result_value_ptr[562] = _tmp197;
  result_value_ptr[563] = x1;
  result_value_ptr[564] = _tmp147;
  result_value_ptr[565] = 3;
  result_value_ptr[566] = _tmp91;
  result_value_ptr[567] = 9;
  result_value_ptr[568] = 9;
  result_value_ptr[569] = _tmp21 - 12;
  result_value_ptr[570] = -_tmp228 - _tmp7 - 5;
  result_value_ptr[571] = Scalar(1.0);
  result_value_ptr[572] = _tmp79;
  result_value_ptr[573] = 4;
  result_value_ptr[574] = 1;
  result_value_ptr[575] = _tmp34;
  result_value_ptr[576] = _tmp230;
  result_value_ptr[577] = _tmp81;
  result_value_ptr[578] = _tmp231;
  result_value_ptr[579] = _tmp11;
  result_value_ptr[580] = -_tmp125;
  result_value_ptr[581] = 4;
  result_value_ptr[582] = _tmp17;
  result_value_ptr[583] = -10;
  result_value_ptr[584] = _tmp14;
  result_value_ptr[585] = _tmp13;
  result_value_ptr[586] = _tmp16;
  result_value_ptr[587] = _tmp17;
  result_value_ptr[588] = _tmp19;
  result_value_ptr[589] = _tmp33;
  result_value_ptr[590] = _tmp14;
  result_value_ptr[591] = 2;
  result_value_ptr[592] = _tmp71;
  result_value_ptr[593] = _tmp97;
  result_value_ptr[594] = _tmp232;
  result_value_ptr[595] = -6;
  result_value_ptr[596] = _tmp85;
  result_value_ptr[597] = -_tmp7 - 8;
  result_value_ptr[598] = -4;
  result_value_ptr[599] = _tmp103;
  result_value_ptr[600] = _tmp159;
  result_value_ptr[601] = _tmp7;
  result_value_ptr[602] = -_tmp233;
  result_value_ptr[603] = -_tmp159 - 2;
  result_value_ptr[604] = _tmp157 * _tmp212;
  result_value_ptr[605] = _tmp162;
  result_value_ptr[606] = _tmp157 * _tmp5;
  result_value_ptr[607] = 8;
  result_value_ptr[608] = _tmp13;
  result_value_ptr[609] = _tmp234;
  result_value_ptr[610] = _tmp45 * _tmp48;
  result_value_ptr[611] = x0;
  result_value_ptr[612] = -Scalar(1) / Scalar(2) * _tmp204;
  result_value_ptr[613] = x0;
  result_value_ptr[614] = _tmp2;
  result_value_ptr[615] = _tmp80;
  result_value_ptr[616] = _tmp141;
  result_value_ptr[617] = _tmp227;
  result_value_ptr[618] = _tmp152;
  result_value_ptr[619] = Scalar(1.0);
  result_value_ptr[620] = -_tmp235;
  result_value_ptr[621] = -_tmp152;
  result_value_ptr[622] = _tmp151 * _tmp212 - _tmp181 - _tmp30;
  result_value_ptr[623] = _tmp156;
  result_value_ptr[624] = _tmp151 * _tmp5;
  result_value_ptr[625] = _tmp141;
  result_value_ptr[626] = -_tmp141;
  result_value_ptr[627] = _tmp141;
  result_value_ptr[628] = -_tmp37 - _tmp78;
  result_value_ptr[629] = _tmp121;
  result_value_ptr[630] = _tmp237;
  result_value_ptr[631] = _tmp30;
  result_value_ptr[632] = x1;
  result_value_ptr[633] = _tmp137 * x1;
  result_value_ptr[634] = _tmp2;
  result_value_ptr[635] = _tmp238;
  result_value_ptr[636] = Scalar(0.5);
  result_value_ptr[637] = _tmp90;
  result_value_ptr[638] = _tmp199;
  result_value_ptr[639] = _tmp175;
  result_value_ptr[640] = _tmp89;
  result_value_ptr[641] = -_tmp212 * x0;
  result_value_ptr[642] = -_tmp239 - _tmp45 - Scalar(1.5) * x0;
  result_value_ptr[643] = _tmp29;
  result_value_ptr[644] = _tmp200;
  result_value_ptr[645] = -_tmp2 * _tmp200;
  result_value_ptr[646] = _tmp199 * _tmp66;
  result_value_ptr[647] = _tmp201;
  result_value_ptr[648] = Scalar(1.0);
  result_value_ptr[649] = -_tmp103;
  result_value_ptr[650] = Scalar(0.5) - _tmp54;
  result_value_ptr[651] = Scalar(-0.5);
  result_value_ptr[652] = Scalar(-3.0);
  result_value_ptr[653] = _tmp96;
  result_value_ptr[654] = x1;
  result_value_ptr[655] = -_tmp102 * _tmp56;
  result_value_ptr[656] = _tmp33;
  result_value_ptr[657] = -_tmp77;
  result_value_ptr[658] = _tmp167;
  result_value_ptr[659] = _tmp71;
  result_value_ptr[660] = _tmp212 * x1;
  result_value_ptr[661] = _tmp22;
  result_value_ptr[662] = _tmp102 * _tmp149 + _tmp27 + Scalar(1.0);
  result_value_ptr[663] = _tmp79;
  result_value_ptr[664] = 4;
  result_value_ptr[665] = 1;
  result_value_ptr[666] = _tmp34;
  result_value_ptr[667] = _tmp119;
  result_value_ptr[668] = -_tmp102 * _tmp89;
  result_value_ptr[669] = -_tmp102 * _tmp86;
  result_value_ptr[670] = -_tmp102 * _tmp30;
  result_value_ptr[671] = _tmp119;
  result_value_ptr[672] = _tmp241;
  result_value_ptr[673] = _tmp15;
  result_value_ptr[674] = _tmp43;
  result_value_ptr[675] = _tmp167;
  result_value_ptr[676] = -_tmp242;
  result_value_ptr[677] = _tmp166;
  result_value_ptr[678] = _tmp243 + _tmp41 + _tmp44;
  result_value_ptr[679] = -_tmp244;
  result_value_ptr[680] = _tmp85;
  result_value_ptr[681] = _tmp245;
  result_value_ptr[682] = _tmp172;
  result_value_ptr[683] = _tmp166 * _tmp56;
  result_value_ptr[684] = _tmp110;
  result_value_ptr[685] = _tmp2;
  result_value_ptr[686] = _tmp90;
  result_value_ptr[687] = _tmp203;
  result_value_ptr[688] = _tmp21;
  result_value_ptr[689] = x0;
  result_value_ptr[690] = _tmp89;
  result_value_ptr[691] = 3;
  result_value_ptr[692] = _tmp2;
  result_value_ptr[693] = x1;
  result_value_ptr[694] = _tmp134;
  result_value_ptr[695] = _tmp100;
  result_value_ptr[696] = _tmp246 + _tmp9;
  result_value_ptr[697] = -1;
  result_value_ptr[698] = _tmp22;
  result_value_ptr[699] = _tmp90;
  result_value_ptr[700] = _tmp89;
  result_value_ptr[701] = -_tmp2 * _tmp57;
  result_value_ptr[702] = x1;
  result_value_ptr[703] = _tmp15;
  result_value_ptr[704] = 1;
  result_value_ptr[705] = _tmp111;
  result_value_ptr[706] = _tmp166;
  result_value_ptr[707] = _tmp240;
  result_value_ptr[708] = 4;
  result_value_ptr[709] = _tmp13;
  result_value_ptr[710] = -4;
  result_value_ptr[711] = _tmp242;
  result_value_ptr[712] = 8;
  result_value_ptr[713] = _tmp245;
  result_value_ptr[714] = _tmp244;
  result_value_ptr[715] = -_tmp42 - _tmp91 + 2;
  result_value_ptr[716] = _tmp243;
  result_value_ptr[717] = _tmp67;
  result_value_ptr[718] = Scalar(2.0) - _tmp40;
  result_value_ptr[719] = _tmp40;
  result_value_ptr[720] = _tmp75;
  result_value_ptr[721] = _tmp248;
  result_value_ptr[722] = -8;
  result_value_ptr[723] = _tmp70 - 4;
  result_value_ptr[724] = -12 * x1;
  result_value_ptr[725] = x0;
  result_value_ptr[726] = _tmp63;
  result_value_ptr[727] = _tmp160;
  result_value_ptr[728] = _tmp58 * _tmp77;
  result_value_ptr[729] = x1;
  result_value_ptr[730] = _tmp249;
  result_value_ptr[731] = _tmp100;
  result_value_ptr[732] = _tmp2;
  result_value_ptr[733] = -1;
  result_value_ptr[734] = -_tmp100 - _tmp250 * x1 - _tmp58 * _tmp79;
  result_value_ptr[735] = _tmp251;
  result_value_ptr[736] = _tmp138;
  result_value_ptr[737] = _tmp59;
  result_value_ptr[738] = -_tmp227;
  result_value_ptr[739] = _tmp165;
  result_value_ptr[740] = -2;
  result_value_ptr[741] = -_tmp121;
  result_value_ptr[742] = _tmp7;
  result_value_ptr[743] = Scalar(-4.0);
  result_value_ptr[744] = _tmp17;
  result_value_ptr[745] = 18 - _tmp21;
  result_value_ptr[746] = _tmp37;
  result_value_ptr[747] = -2;
  result_value_ptr[748] = Scalar(-2.0);
  result_value_ptr[749] = _tmp206;
  result_value_ptr[750] = Scalar(8.0);
  result_value_ptr[751] = _tmp17;
  result_value_ptr[752] = Scalar(6.0) * x0 + 18;
  result_value_ptr[753] = _tmp252;
  result_value_ptr[754] = _tmp17;
  result_value_ptr[755] = _tmp253;
  result_value_ptr[756] = -6;
  result_value_ptr[757] = -_tmp20;
  result_value_ptr[758] = 6;
  result_value_ptr[759] = -_tmp21 * x1;
  result_value_ptr[760] = _tmp254;
  result_value_ptr[761] = _tmp70;
  result_value_ptr[762] = _tmp116;
  result_value_ptr[763] = _tmp13;
  result_value_ptr[764] = _tmp75;
  result_value_ptr[765] = _tmp92;
  result_value_ptr[766] = _tmp40;
  result_value_ptr[767] = _tmp255;
  result_value_ptr[768] = -16 * x1;
  result_value_ptr[769] = _tmp95;
  result_value_ptr[770] = _tmp68;
  result_value_ptr[771] = _tmp125 - _tmp2 * _tmp95 + _tmp256;
  result_value_ptr[772] = _tmp66 * _tmp92;
  result_value_ptr[773] = _tmp114;
  result_value_ptr[774] = _tmp14;
  result_value_ptr[775] = _tmp247;
  result_value_ptr[776] = _tmp198;
  result_value_ptr[777] = _tmp43;
  result_value_ptr[778] = 6;
  result_value_ptr[779] = _tmp34;
  result_value_ptr[780] = -_tmp211;
  result_value_ptr[781] = _tmp160;
  result_value_ptr[782] = _tmp77;
  result_value_ptr[783] = 3;
  result_value_ptr[784] = Scalar(-1.0);
  result_value_ptr[785] = -12;
  result_value_ptr[786] = -_tmp79;
  result_value_ptr[787] = _tmp110;
  result_value_ptr[788] = _tmp257;
  result_value_ptr[789] = _tmp168 - 4;
  result_value_ptr[790] = -1;
  result_value_ptr[791] = x1;
  result_value_ptr[792] = _tmp15;
  result_value_ptr[793] = _tmp166 * _tmp199;
  result_value_ptr[794] = Scalar(4.0) - _tmp37;
  result_value_ptr[795] = _tmp168;
  result_value_ptr[796] = _tmp109;
  result_value_ptr[797] = 2;
  result_value_ptr[798] = _tmp258;
  result_value_ptr[799] = -1;
  result_value_ptr[800] = -2;
  result_value_ptr[801] = _tmp56;
  result_value_ptr[802] = 4;
  result_value_ptr[803] = _tmp109;
  result_value_ptr[804] = _tmp96;
  result_value_ptr[805] = x0;
  result_value_ptr[806] = _tmp47;
  result_value_ptr[807] = -_tmp124 - _tmp7 + Scalar(-7.0);
  result_value_ptr[808] = _tmp57;
  result_value_ptr[809] = _tmp7;
  result_value_ptr[810] = _tmp206;
  result_value_ptr[811] = _tmp115;
  result_value_ptr[812] = _tmp234;
  result_value_ptr[813] = -_tmp257;
  result_value_ptr[814] = _tmp260;
  result_value_ptr[815] = _tmp236;
  result_value_ptr[816] = _tmp15;
  result_value_ptr[817] = _tmp203;
  result_value_ptr[818] = -_tmp77 * _tmp86;
  result_value_ptr[819] = _tmp45 * _tmp56;
  result_value_ptr[820] = _tmp261;
  result_value_ptr[821] = _tmp260;
  result_value_ptr[822] = _tmp79 * _tmp86;
  result_value_ptr[823] = _tmp259;
  result_value_ptr[824] = _tmp262;
  result_value_ptr[825] = _tmp260;
  result_value_ptr[826] = _tmp193 + _tmp45 * _tmp57 + _tmp86;
  result_value_ptr[827] = _tmp237;
  result_value_ptr[828] = _tmp169;
  result_value_ptr[829] = _tmp264;
  result_value_ptr[830] = _tmp233;
  result_value_ptr[831] = _tmp166 * _tmp5;
  result_value_ptr[832] = _tmp175;
  result_value_ptr[833] = 2;
  result_value_ptr[834] = _tmp40;
  result_value_ptr[835] = _tmp17;
  result_value_ptr[836] = -2;
  result_value_ptr[837] = -_tmp70 - 8;
  result_value_ptr[838] = 4;
  result_value_ptr[839] = Scalar(4.0);
  result_value_ptr[840] = _tmp96;
  result_value_ptr[841] = _tmp47 - 8;
  result_value_ptr[842] = _tmp47;
  result_value_ptr[843] = 16;
  result_value_ptr[844] = Scalar(1.0) - _tmp7;
  result_value_ptr[845] = 4;
  result_value_ptr[846] = -_tmp21 - _tmp7;
  result_value_ptr[847] = _tmp177;
  result_value_ptr[848] = _tmp47;
  result_value_ptr[849] = _tmp89;
  result_value_ptr[850] = _tmp47;
  result_value_ptr[851] = _tmp42;
  result_value_ptr[852] = _tmp73;
  result_value_ptr[853] = 10;
  result_value_ptr[854] = _tmp265;
  result_value_ptr[855] = -_tmp258;
  result_value_ptr[856] = -4;
  result_value_ptr[857] = -Scalar(1) / Scalar(2) * _tmp0 + _tmp17 + _tmp186 + _tmp7;
  result_value_ptr[858] = _tmp131;
  result_value_ptr[859] = _tmp50;
  result_value_ptr[860] = _tmp266;
  result_value_ptr[861] = _tmp34;
  result_value_ptr[862] = _tmp32;
  result_value_ptr[863] = _tmp71;
  result_value_ptr[864] = _tmp100;
  result_value_ptr[865] = _tmp73;
  result_value_ptr[866] = _tmp267;
  result_value_ptr[867] = 6;
  result_value_ptr[868] = _tmp265;
  result_value_ptr[869] = _tmp21;
  result_value_ptr[870] = -_tmp268;
  result_value_ptr[871] = _tmp251;
  result_value_ptr[872] = -_tmp128 * _tmp50;
  result_value_ptr[873] = _tmp6;
  result_value_ptr[874] = _tmp128 * _tmp61 - _tmp151 * _tmp22 - _tmp77;
  result_value_ptr[875] = _tmp57;
  result_value_ptr[876] = _tmp269;
  result_value_ptr[877] = _tmp96;
  result_value_ptr[878] = -3 * _tmp117;
  result_value_ptr[879] = -3 * _tmp31;
  result_value_ptr[880] = _tmp223;
  result_value_ptr[881] = _tmp80;
  result_value_ptr[882] = _tmp270;
  result_value_ptr[883] = _tmp80;
  result_value_ptr[884] = _tmp248;
  result_value_ptr[885] = _tmp34;
  result_value_ptr[886] = _tmp204;
  result_value_ptr[887] = _tmp244;
  result_value_ptr[888] = _tmp22;
  result_value_ptr[889] = _tmp100;
  result_value_ptr[890] = 1;
  result_value_ptr[891] = _tmp271;
  result_value_ptr[892] = _tmp141 + _tmp178 - _tmp272;
  result_value_ptr[893] = _tmp2 * _tmp88;
  result_value_ptr[894] = _tmp33;
  result_value_ptr[895] = _tmp100;
  result_value_ptr[896] = x1;
  result_value_ptr[897] = _tmp34;
  result_value_ptr[898] = _tmp96;
  result_value_ptr[899] = _tmp273;
  result_value_ptr[900] = _tmp22;
  result_value_ptr[901] = x0;
  result_value_ptr[902] = _tmp137 * x0;
  result_value_ptr[903] = 2;
  result_value_ptr[904] = -Scalar(1.0) * _tmp45;
  result_value_ptr[905] = _tmp123;
  result_value_ptr[906] = _tmp96;
  result_value_ptr[907] = _tmp260;
  result_value_ptr[908] = _tmp0;
  result_value_ptr[909] = _tmp77;
  result_value_ptr[910] = _tmp105;
  result_value_ptr[911] = -_tmp120 - _tmp89;
  result_value_ptr[912] = _tmp7;
  result_value_ptr[913] = _tmp234;
  result_value_ptr[914] = -2;
  result_value_ptr[915] = _tmp41;
  result_value_ptr[916] = _tmp259;
  result_value_ptr[917] = _tmp45 * _tmp58;
  result_value_ptr[918] = _tmp45;
  result_value_ptr[919] = 6 * _tmp45;
  result_value_ptr[920] = _tmp107;
  result_value_ptr[921] = _tmp227;
  result_value_ptr[922] = _tmp241;
  result_value_ptr[923] = _tmp76;
  result_value_ptr[924] = -_tmp149 * x1;
  result_value_ptr[925] = Scalar(-1) / Scalar(2);
  result_value_ptr[926] = _tmp273;
  result_value_ptr[927] = _tmp174;
  result_value_ptr[928] = _tmp274;
  result_value_ptr[929] = _tmp15 * _tmp61 + _tmp22;
  result_value_ptr[930] = -_tmp61;
  result_value_ptr[931] = _tmp275;
  result_value_ptr[932] = _tmp143;
  result_value_ptr[933] = _tmp195;
  result_value_ptr[934] = _tmp132;
  result_value_ptr[935] = _tmp236;
  result_value_ptr[936] = _tmp217;
  result_value_ptr[937] = _tmp33;
  result_value_ptr[938] = 16;
  result_value_ptr[939] = 2 * _tmp276;
  result_value_ptr[940] = _tmp40;
  result_value_ptr[941] = _tmp44;
  result_value_ptr[942] = -_tmp276 * _tmp50;
  result_value_ptr[943] = _tmp96;
  result_value_ptr[944] = _tmp14;
  result_value_ptr[945] = 1;
  result_value_ptr[946] = -_tmp102 * _tmp276 + 7 * x1;
  result_value_ptr[947] = 8;
  result_value_ptr[948] = 4;
  result_value_ptr[949] = 16;
  result_value_ptr[950] = -_tmp276 * _tmp30;
  result_value_ptr[951] = -_tmp276;
  result_value_ptr[952] = _tmp34;
  result_value_ptr[953] = _tmp22;
  result_value_ptr[954] = _tmp53;
  result_value_ptr[955] = _tmp160;
  result_value_ptr[956] = _tmp13;
  result_value_ptr[957] = _tmp277;
  result_value_ptr[958] = _tmp223;
  result_value_ptr[959] = _tmp204;
  result_value_ptr[960] = -_tmp278;
  result_value_ptr[961] = _tmp279;
  result_value_ptr[962] = _tmp203;
  result_value_ptr[963] = _tmp148 * _tmp277;
  result_value_ptr[964] = _tmp22;
  result_value_ptr[965] = _tmp100 + _tmp2 + _tmp278;
  result_value_ptr[966] = x0;
  result_value_ptr[967] = _tmp13;
  result_value_ptr[968] = -_tmp277;
  result_value_ptr[969] = _tmp277;
  result_value_ptr[970] = _tmp246;
  result_value_ptr[971] = _tmp279;
  result_value_ptr[972] = _tmp109;
  result_value_ptr[973] = -_tmp111 * x0;
  result_value_ptr[974] = _tmp280;
  result_value_ptr[975] = 16;
  result_value_ptr[976] = 2;
  result_value_ptr[977] = _tmp17;
  result_value_ptr[978] = _tmp44;
  result_value_ptr[979] = _tmp96;
  result_value_ptr[980] = _tmp13;
  result_value_ptr[981] = _tmp14;
  result_value_ptr[982] = 4;
  result_value_ptr[983] = _tmp40;
  result_value_ptr[984] = 8;
  result_value_ptr[985] = _tmp197 + 4;
  result_value_ptr[986] = 16;
  result_value_ptr[987] = _tmp234;
  result_value_ptr[988] = -2;
  result_value_ptr[989] = _tmp41;
  result_value_ptr[990] = _tmp9;
  result_value_ptr[991] = 4;
  result_value_ptr[992] = 2 - _tmp40;
  result_value_ptr[993] = _tmp91;
  result_value_ptr[994] = 12 - _tmp13;
  result_value_ptr[995] = _tmp90;
  result_value_ptr[996] = -_tmp213;
  result_value_ptr[997] = -_tmp56 * _tmp88;
  result_value_ptr[998] = _tmp71;
  result_value_ptr[999] = -_tmp250 * _tmp86;
  result_value_ptr[1000] = _tmp185;
  result_value_ptr[1001] = _tmp279;
  result_value_ptr[1002] = _tmp281;
  result_value_ptr[1003] = _tmp269;
  result_value_ptr[1004] = _tmp266;
  result_value_ptr[1005] = _tmp223 + _tmp282 + 12;
  result_value_ptr[1006] = _tmp132;
  result_value_ptr[1007] = _tmp2;
  result_value_ptr[1008] = _tmp14;
  result_value_ptr[1009] = _tmp111 * _tmp86;
  result_value_ptr[1010] = -_tmp283 * _tmp86;
  result_value_ptr[1011] = -_tmp261;
  result_value_ptr[1012] = _tmp77;
  result_value_ptr[1013] = 2;
  result_value_ptr[1014] = x1;
  result_value_ptr[1015] = _tmp274;
  result_value_ptr[1016] = _tmp104;
  result_value_ptr[1017] = _tmp100;
  result_value_ptr[1018] = _tmp128;
  result_value_ptr[1019] = _tmp61;
  result_value_ptr[1020] = _tmp272;
  result_value_ptr[1021] = -_tmp102;
  result_value_ptr[1022] = _tmp22;
  result_value_ptr[1023] = _tmp104;
  result_value_ptr[1024] = _tmp99;
  result_value_ptr[1025] = -1;
  result_value_ptr[1026] = x1;
  result_value_ptr[1027] = _tmp7;
  result_value_ptr[1028] = _tmp90;
  result_value_ptr[1029] = x0;
  result_value_ptr[1030] = _tmp188;
  result_value_ptr[1031] = _tmp100;
  result_value_ptr[1032] = -4;
  result_value_ptr[1033] = -1;
  result_value_ptr[1034] = _tmp284;
  result_value_ptr[1035] = _tmp57;
  result_value_ptr[1036] = x1;
  result_value_ptr[1037] = -_tmp11 * _tmp22;
  result_value_ptr[1038] = _tmp143;
  result_value_ptr[1039] = -2;
  result_value_ptr[1040] = _tmp10;
  result_value_ptr[1041] = _tmp132 + _tmp197 + _tmp56;
  result_value_ptr[1042] = 2;
  result_value_ptr[1043] = 1;
  result_value_ptr[1044] = _tmp7;
  result_value_ptr[1045] = -_tmp22 * _tmp9;
  result_value_ptr[1046] = _tmp217 * x0;
  result_value_ptr[1047] = _tmp46;
  result_value_ptr[1048] = _tmp14;
  result_value_ptr[1049] = _tmp144;
  result_value_ptr[1050] = -_tmp210;
  result_value_ptr[1051] = _tmp177;
  result_value_ptr[1052] = _tmp64;
  result_value_ptr[1053] = _tmp207;
  result_value_ptr[1054] = _tmp108;
  result_value_ptr[1055] = _tmp15 * _tmp58;
  result_value_ptr[1056] = _tmp118;
  result_value_ptr[1057] = _tmp138;
  result_value_ptr[1058] = _tmp219;
  result_value_ptr[1059] = _tmp195 - _tmp285;
  result_value_ptr[1060] = _tmp265;
  result_value_ptr[1061] = _tmp123;
  result_value_ptr[1062] = _tmp199 * _tmp56;
  result_value_ptr[1063] = _tmp252;
  result_value_ptr[1064] = _tmp207;
  result_value_ptr[1065] = _tmp105;
  result_value_ptr[1066] = x0;
  result_value_ptr[1067] = _tmp225;
  result_value_ptr[1068] = _tmp100;
  result_value_ptr[1069] = -_tmp148 * _tmp57;
  result_value_ptr[1070] = _tmp2;
  result_value_ptr[1071] = _tmp226;
  result_value_ptr[1072] = _tmp57;
  result_value_ptr[1073] = _tmp205;
  result_value_ptr[1074] = -_tmp128 - _tmp7;
  result_value_ptr[1075] = -_tmp253;
  result_value_ptr[1076] = _tmp71;
  result_value_ptr[1077] = _tmp96;
  result_value_ptr[1078] = _tmp13;
  result_value_ptr[1079] = _tmp14;
  result_value_ptr[1080] = _tmp33;
  result_value_ptr[1081] = _tmp40;
  result_value_ptr[1082] = _tmp271;
  result_value_ptr[1083] = _tmp275;
  result_value_ptr[1084] = _tmp263;
  result_value_ptr[1085] = _tmp71;
  result_value_ptr[1086] = -2;
  result_value_ptr[1087] = _tmp7;
  result_value_ptr[1088] = _tmp73;
  result_value_ptr[1089] = _tmp96;
  result_value_ptr[1090] = -_tmp262 - _tmp73;
  result_value_ptr[1091] = 8;
  result_value_ptr[1092] = _tmp42;
  result_value_ptr[1093] = -_tmp159;
  result_value_ptr[1094] = -_tmp26;
  result_value_ptr[1095] = _tmp90;
  result_value_ptr[1096] = -2;
  result_value_ptr[1097] = _tmp146;
  result_value_ptr[1098] = _tmp15;
  result_value_ptr[1099] = _tmp7;
  result_value_ptr[1100] = _tmp228;
  result_value_ptr[1101] = _tmp91 - 12;
  result_value_ptr[1102] = -4;
  result_value_ptr[1103] = _tmp229;
  result_value_ptr[1104] = _tmp140;
  result_value_ptr[1105] = _tmp206;
  result_value_ptr[1106] = -_tmp231;
  result_value_ptr[1107] = 2;
  result_value_ptr[1108] = _tmp12;
  result_value_ptr[1109] = _tmp123 + _tmp13 - _tmp15 * _tmp50;
  result_value_ptr[1110] = _tmp286;
  result_value_ptr[1111] = _tmp279;
  result_value_ptr[1112] = _tmp286;
  result_value_ptr[1113] = 16 - _tmp70;
  result_value_ptr[1114] = 10 * x0;
  result_value_ptr[1115] = _tmp141;
  result_value_ptr[1116] = -8;
  result_value_ptr[1117] = _tmp14;
  result_value_ptr[1118] = 4;
  result_value_ptr[1119] = -_tmp2 * _tmp92;
  result_value_ptr[1120] = _tmp186;
  result_value_ptr[1121] = -6;
  result_value_ptr[1122] = _tmp111 - _tmp126 * _tmp2;
  result_value_ptr[1123] = _tmp21;
  result_value_ptr[1124] = _tmp145;
  result_value_ptr[1125] = _tmp205;
  result_value_ptr[1126] = _tmp2;
  result_value_ptr[1127] = _tmp13;
  result_value_ptr[1128] = _tmp17;
  result_value_ptr[1129] = _tmp109;
  result_value_ptr[1130] = 6;
  result_value_ptr[1131] = 10;
  result_value_ptr[1132] = _tmp256;
  result_value_ptr[1133] = -3;
  result_value_ptr[1134] = -4;
  result_value_ptr[1135] = _tmp75;
  result_value_ptr[1136] = -_tmp15;
  result_value_ptr[1137] = _tmp255;
  result_value_ptr[1138] = _tmp36;
  result_value_ptr[1139] = _tmp34;
  result_value_ptr[1140] = _tmp267;
  result_value_ptr[1141] = -_tmp40 * _tmp86 + _tmp96 + 10;
  result_value_ptr[1142] = _tmp265;
  result_value_ptr[1143] = _tmp74;
  result_value_ptr[1144] = _tmp40;
  result_value_ptr[1145] = _tmp137 * _tmp40;
  result_value_ptr[1146] = -1;
  result_value_ptr[1147] = _tmp143;
  result_value_ptr[1148] = _tmp170;
  result_value_ptr[1149] = 20;
  result_value_ptr[1150] = Scalar(3.0);
  result_value_ptr[1151] = _tmp205;
  result_value_ptr[1152] = -8;
  result_value_ptr[1153] = _tmp128;
  result_value_ptr[1154] = _tmp133;
  result_value_ptr[1155] = _tmp287;
  result_value_ptr[1156] = 6;
  result_value_ptr[1157] = _tmp221;
  result_value_ptr[1158] = 16 - _tmp13;
  result_value_ptr[1159] = 12;
  result_value_ptr[1160] = _tmp270 + _tmp288 + 4;
  result_value_ptr[1161] = _tmp289;
  result_value_ptr[1162] = -3;
  result_value_ptr[1163] = -18;
  result_value_ptr[1164] = _tmp206;
  result_value_ptr[1165] = -_tmp179 * _tmp56;
  result_value_ptr[1166] = _tmp24 * _tmp56;
  result_value_ptr[1167] = _tmp124;
  result_value_ptr[1168] = -6;
  result_value_ptr[1169] = _tmp17;
  result_value_ptr[1170] = -_tmp11 - _tmp7;
  result_value_ptr[1171] = _tmp94;
  result_value_ptr[1172] = _tmp234;
  result_value_ptr[1173] = _tmp127;
  result_value_ptr[1174] = _tmp128;
  result_value_ptr[1175] = _tmp130;
  result_value_ptr[1176] = _tmp195;
  result_value_ptr[1177] = _tmp291;
  result_value_ptr[1178] = Scalar(-2.0);
  result_value_ptr[1179] = 4;
  result_value_ptr[1180] = _tmp37;
  result_value_ptr[1181] = _tmp292 * _tmp56;
  result_value_ptr[1182] = _tmp281;
  result_value_ptr[1183] = -_tmp293;
  result_value_ptr[1184] = _tmp24;
  result_value_ptr[1185] = _tmp219;
  result_value_ptr[1186] = _tmp121 + _tmp181;
  result_value_ptr[1187] = _tmp34;
  result_value_ptr[1188] = _tmp40;
  result_value_ptr[1189] = -_tmp292 * _tmp86;
  result_value_ptr[1190] = _tmp208 + _tmp293 + _tmp71;
  result_value_ptr[1191] = _tmp40;
  result_value_ptr[1192] = _tmp70;
  result_value_ptr[1193] = _tmp292;
  result_value_ptr[1194] = _tmp137 * _tmp292;
  result_value_ptr[1195] = x1;
  result_value_ptr[1196] = _tmp32;
  result_value_ptr[1197] = _tmp99;
  result_value_ptr[1198] = _tmp249;
  result_value_ptr[1199] = _tmp216;
  result_value_ptr[1200] = _tmp134;
  result_value_ptr[1201] = _tmp132;
  result_value_ptr[1202] = -_tmp11 * _tmp56;
  result_value_ptr[1203] = -_tmp294;
  result_value_ptr[1204] = _tmp47;
  result_value_ptr[1205] = _tmp133;
  result_value_ptr[1206] = _tmp265;
  result_value_ptr[1207] = _tmp284;
  result_value_ptr[1208] = _tmp295;
  result_value_ptr[1209] = -_tmp285 - _tmp85;
  result_value_ptr[1210] = _tmp251;
  result_value_ptr[1211] = _tmp71;
  result_value_ptr[1212] = -_tmp20 * x1;
  result_value_ptr[1213] = _tmp296;
  result_value_ptr[1214] = _tmp221;
  result_value_ptr[1215] = _tmp13 * _tmp56;
  result_value_ptr[1216] = Scalar(1.0);
  result_value_ptr[1217] = _tmp297;
  result_value_ptr[1218] = -_tmp298 * _tmp61;
  result_value_ptr[1219] = _tmp149;
  result_value_ptr[1220] = _tmp299;
  result_value_ptr[1221] = _tmp22;
  result_value_ptr[1222] = _tmp17;
  result_value_ptr[1223] = _tmp2 + 6;
  result_value_ptr[1224] = 2;
  result_value_ptr[1225] = _tmp90;
  result_value_ptr[1226] = _tmp297;
  result_value_ptr[1227] = 2;
  result_value_ptr[1228] = _tmp199 * _tmp298 + _tmp34 + 3;
  result_value_ptr[1229] = _tmp99;
  result_value_ptr[1230] = _tmp17;
  result_value_ptr[1231] = -_tmp78 + Scalar(-6.0);
  result_value_ptr[1232] = _tmp299;
  result_value_ptr[1233] = _tmp270;
  result_value_ptr[1234] = _tmp181;
  result_value_ptr[1235] = -_tmp149 * _tmp22;
  result_value_ptr[1236] = _tmp155;
  result_value_ptr[1237] = _tmp204;
  result_value_ptr[1238] = _tmp195 + _tmp40;
  result_value_ptr[1239] = _tmp268;
  result_value_ptr[1240] = _tmp206;
  result_value_ptr[1241] = -_tmp300;
  result_value_ptr[1242] = -_tmp151 * _tmp86;
  result_value_ptr[1243] = _tmp205;
  result_value_ptr[1244] = _tmp154;
  result_value_ptr[1245] = -_tmp295;
  result_value_ptr[1246] = _tmp149 * _tmp92 - 4;
  result_value_ptr[1247] = _tmp137 * _tmp151;
  result_value_ptr[1248] = -_tmp21 - 12;
  result_value_ptr[1249] = _tmp300;
  result_value_ptr[1250] = _tmp128 + _tmp213;
  result_value_ptr[1251] = _tmp301 * _tmp56;
  result_value_ptr[1252] = -_tmp212 * _tmp56;
  result_value_ptr[1253] = 2;
  result_value_ptr[1254] = -_tmp302;
  result_value_ptr[1255] = _tmp149 * _tmp212;
  result_value_ptr[1256] = _tmp131;
  result_value_ptr[1257] = _tmp187 + Scalar(2.0);
  result_value_ptr[1258] = _tmp303;
  result_value_ptr[1259] = _tmp96;
  result_value_ptr[1260] = -_tmp301 * _tmp86;
  result_value_ptr[1261] = -_tmp212 * _tmp89;
  result_value_ptr[1262] = _tmp302;
  result_value_ptr[1263] = -_tmp212 * _tmp86;
  result_value_ptr[1264] = _tmp301;
  result_value_ptr[1265] = _tmp137 * _tmp301 - _tmp212 * _tmp30 - 4;
  result_value_ptr[1266] = _tmp303;
  result_value_ptr[1267] = _tmp157;
  result_value_ptr[1268] = _tmp5;
  result_value_ptr[1269] = x0;
  result_value_ptr[1270] = Scalar(3.0);
  result_value_ptr[1271] = _tmp296;
  result_value_ptr[1272] = -4;
  result_value_ptr[1273] = _tmp128;
  result_value_ptr[1274] = _tmp149 * _tmp9;
  result_value_ptr[1275] = -12;
  result_value_ptr[1276] = 6;
  result_value_ptr[1277] = -_tmp218;
  result_value_ptr[1278] = _tmp253;
  result_value_ptr[1279] = _tmp223;
  result_value_ptr[1280] = -_tmp89 * _tmp9;
  result_value_ptr[1281] = _tmp289;
  result_value_ptr[1282] = -_tmp215;
  result_value_ptr[1283] = -3;
  result_value_ptr[1284] = -_tmp30 * _tmp9;
  result_value_ptr[1285] = -_tmp218 - _tmp82 - 18;
  result_value_ptr[1286] = _tmp13;
  result_value_ptr[1287] = _tmp70;
  result_value_ptr[1288] = 16;
  result_value_ptr[1289] = _tmp194;
  result_value_ptr[1290] = 6;
  result_value_ptr[1291] = _tmp266;
  result_value_ptr[1292] = _tmp19;
  result_value_ptr[1293] = _tmp263;
  result_value_ptr[1294] = 3;
  result_value_ptr[1295] = _tmp25;
  result_value_ptr[1296] = _tmp7;
  result_value_ptr[1297] = -1;
  result_value_ptr[1298] = _tmp35;
  result_value_ptr[1299] = _tmp263;
  result_value_ptr[1300] = _tmp17;
  result_value_ptr[1301] = _tmp28 + 3;
  result_value_ptr[1302] = (Scalar(1) / Scalar(2)) * _tmp28;
  result_value_ptr[1303] = -_tmp25;
  result_value_ptr[1304] = _tmp195;
  result_value_ptr[1305] = _tmp15;
  result_value_ptr[1306] = _tmp100;
  result_value_ptr[1307] = _tmp34;
  result_value_ptr[1308] = _tmp14;
  result_value_ptr[1309] = _tmp280;
  result_value_ptr[1310] = _tmp113;
  result_value_ptr[1311] = _tmp2;
  result_value_ptr[1312] = _tmp171;
  result_value_ptr[1313] = -_tmp11 * _tmp2;
  result_value_ptr[1314] = _tmp223;
  result_value_ptr[1315] = _tmp222;
  result_value_ptr[1316] = _tmp112;
  result_value_ptr[1317] = x0;
  result_value_ptr[1318] = _tmp235;
  result_value_ptr[1319] = _tmp203;
  result_value_ptr[1320] = -_tmp218 - _tmp239 - Scalar(1) / Scalar(2) * _tmp45;
  result_value_ptr[1321] = _tmp128;
  result_value_ptr[1322] = -_tmp166 * _tmp179;
  result_value_ptr[1323] = _tmp166 * _tmp24;
  result_value_ptr[1324] = _tmp219;
  result_value_ptr[1325] = _tmp202;
  result_value_ptr[1326] = -24;
  result_value_ptr[1327] = 9;
  result_value_ptr[1328] = _tmp61;
  result_value_ptr[1329] = 12;
  result_value_ptr[1330] = _tmp214 - 3;
  result_value_ptr[1331] = _tmp96;
  result_value_ptr[1332] = -18;
  result_value_ptr[1333] = _tmp257;
  result_value_ptr[1334] = -2;
  result_value_ptr[1335] = 6;
  result_value_ptr[1336] = -_tmp21 - 6;
  result_value_ptr[1337] = _tmp238;
  result_value_ptr[1338] = _tmp110;
  result_value_ptr[1339] = _tmp223;
  result_value_ptr[1340] = _tmp304 + 18;
  result_value_ptr[1341] = Scalar(3.0);
  result_value_ptr[1342] = -6;
  result_value_ptr[1343] = Scalar(2.0);
  result_value_ptr[1344] = _tmp96;
  result_value_ptr[1345] = 3 - _tmp128;
  result_value_ptr[1346] = _tmp2;
  result_value_ptr[1347] = _tmp47;
  result_value_ptr[1348] = _tmp230;
  result_value_ptr[1349] = _tmp14;
  result_value_ptr[1350] = -16;
  result_value_ptr[1351] = _tmp84;
  result_value_ptr[1352] = _tmp198;
  result_value_ptr[1353] = 8;
  result_value_ptr[1354] = _tmp230;
  result_value_ptr[1355] = _tmp80;
  result_value_ptr[1356] = _tmp287;
  result_value_ptr[1357] = _tmp140;
  result_value_ptr[1358] = -4;
  result_value_ptr[1359] = -_tmp111 * _tmp81 - _tmp41 - 2;
  result_value_ptr[1360] = -_tmp166 * _tmp81;
  result_value_ptr[1361] = _tmp254;
  result_value_ptr[1362] = -8;
  result_value_ptr[1363] = -12;
  result_value_ptr[1364] = -6;
  result_value_ptr[1365] = _tmp257;
  result_value_ptr[1366] = _tmp206;
  result_value_ptr[1367] = _tmp264;
  result_value_ptr[1368] = _tmp250 * _tmp56;
  result_value_ptr[1369] = _tmp282;
  result_value_ptr[1370] = _tmp96;
  result_value_ptr[1371] = std::pow(_tmp56, Scalar(2));
  result_value_ptr[1372] = _tmp208;
  result_value_ptr[1373] = _tmp264;
  result_value_ptr[1374] = -_tmp111 * _tmp56;
  result_value_ptr[1375] = -_tmp44;
  result_value_ptr[1376] = -2;
  result_value_ptr[1377] = _tmp283 * _tmp56;
  result_value_ptr[1378] = _tmp196;
  result_value_ptr[1379] = _tmp141 + _tmp157 * _tmp56 + _tmp96 + Scalar(6.0);
  result_value_ptr[1380] = _tmp234;
  result_value_ptr[1381] = _tmp209;
  result_value_ptr[1382] = _tmp204;
  result_value_ptr[1383] = _tmp130;
  result_value_ptr[1384] = _tmp128 + _tmp91;
  result_value_ptr[1385] = 1;
  result_value_ptr[1386] = _tmp144;
  result_value_ptr[1387] = _tmp250 * _tmp305;
  result_value_ptr[1388] = 3;
  result_value_ptr[1389] = _tmp65;
  result_value_ptr[1390] = _tmp305 * _tmp56;
  result_value_ptr[1391] = _tmp104;
  result_value_ptr[1392] = _tmp151 * _tmp58;
  result_value_ptr[1393] = -_tmp111 * _tmp305;
  result_value_ptr[1394] = _tmp96;
  result_value_ptr[1395] = _tmp85;
  result_value_ptr[1396] = _tmp283 * _tmp305;
  result_value_ptr[1397] = -_tmp179 * _tmp58;
  result_value_ptr[1398] = _tmp141 + _tmp37;
  result_value_ptr[1399] = _tmp24 * _tmp58 + _tmp288;
  result_value_ptr[1400] = _tmp96;
  result_value_ptr[1401] = -4;
  result_value_ptr[1402] = _tmp274;
  result_value_ptr[1403] = _tmp107;
  result_value_ptr[1404] = _tmp294;
  result_value_ptr[1405] = _tmp128;
  result_value_ptr[1406] = _tmp189;
  result_value_ptr[1407] = _tmp251;
  result_value_ptr[1408] = _tmp109;
  result_value_ptr[1409] = _tmp108;
  result_value_ptr[1410] = _tmp85;
  result_value_ptr[1411] = _tmp90;
  result_value_ptr[1412] = -_tmp58 * _tmp92;
  result_value_ptr[1413] = x0;
  result_value_ptr[1414] = _tmp190;
  result_value_ptr[1415] = -_tmp186 - _tmp191 - _tmp85;
  result_value_ptr[1416] = _tmp100;
  result_value_ptr[1417] = _tmp192;
  result_value_ptr[1418] = _tmp289;
  result_value_ptr[1419] = -_tmp7 * _tmp88;
  result_value_ptr[1420] = _tmp107;
  result_value_ptr[1421] = -2;
  result_value_ptr[1422] = _tmp91;
  result_value_ptr[1423] = _tmp73;
  result_value_ptr[1424] = _tmp86;
  result_value_ptr[1425] = _tmp96;
  result_value_ptr[1426] = _tmp14;
  result_value_ptr[1427] = _tmp7;
  result_value_ptr[1428] = _tmp73;
  result_value_ptr[1429] = -_tmp199 * _tmp2;
  result_value_ptr[1430] = 4;
  result_value_ptr[1431] = _tmp7;
  result_value_ptr[1432] = -_tmp157;
  result_value_ptr[1433] = _tmp220;
  result_value_ptr[1434] = -_tmp197 - _tmp39 - _tmp5;
  result_value_ptr[1435] = _tmp73;
  result_value_ptr[1436] = _tmp109;
  result_value_ptr[1437] = _tmp89;
  result_value_ptr[1438] = -Scalar(3) / Scalar(2) * _tmp148;
  result_value_ptr[1439] = _tmp96;
  result_value_ptr[1440] = _tmp11 * x0;
  result_value_ptr[1441] = _tmp173;
  result_value_ptr[1442] = _tmp254;
  result_value_ptr[1443] = _tmp90;
  result_value_ptr[1444] = _tmp128;
  result_value_ptr[1445] = _tmp106;
  result_value_ptr[1446] = (Scalar(3) / Scalar(2)) * _tmp199 * x0;
  result_value_ptr[1447] = _tmp74;
  result_value_ptr[1448] = _tmp224;
  result_value_ptr[1449] = _tmp33;
  result_value_ptr[1450] = _tmp32;
  result_value_ptr[1451] = -Scalar(3.0) * x0;
  result_value_ptr[1452] = _tmp113 + _tmp173 + _tmp74;
  result_value_ptr[1453] = _tmp70;
  result_value_ptr[1454] = _tmp2;
  result_value_ptr[1455] = _tmp41;
  result_value_ptr[1456] = -2;
  result_value_ptr[1457] = -8 * _tmp183;
  result_value_ptr[1458] = _tmp153;
  result_value_ptr[1459] = -6;
  result_value_ptr[1460] = _tmp290;
  result_value_ptr[1461] = _tmp74;
  result_value_ptr[1462] = _tmp57;
  result_value_ptr[1463] = -_tmp283 * _tmp92;
  result_value_ptr[1464] = _tmp70;
  result_value_ptr[1465] = _tmp40;
  result_value_ptr[1466] = -_tmp158;
  result_value_ptr[1467] = _tmp2;
  result_value_ptr[1468] = _tmp291;
  result_value_ptr[1469] = _tmp69;
  result_value_ptr[1470] = _tmp40;
  result_value_ptr[1471] = -_tmp304 - _tmp33 + 8;

  return result;
}  // NOLINT(readability/fn_size)

// NOLINTNEXTLINE(readability/fn_size)
}  // namespace sym
